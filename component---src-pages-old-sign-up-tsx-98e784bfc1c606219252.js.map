{"version":3,"file":"component---src-pages-old-sign-up-tsx-98e784bfc1c606219252.js","mappings":"6LA0BA,MAxBmBA,IAEXC,EAAAA,cAAA,OAAKC,MAAM,6BAA6BC,OAAO,KAAKC,QAAQ,YAAYC,MAAM,MAC1EJ,EAAAA,cAAA,QACIK,EAAE,0HACFC,KAAK,YAETN,EAAAA,cAAA,QACIK,EAAE,wIACFC,KAAK,YAETN,EAAAA,cAAA,QACIK,EAAE,gIACFC,KAAK,YAETN,EAAAA,cAAA,QACIK,EAAE,sIACFC,KAAK,YAETN,EAAAA,cAAA,QAAMK,EAAE,gBAAgBC,KAAK,UCAzC,MAbsCC,IAAsC,IAArC,MAAEC,EAAOC,QAASC,GAAaH,EAClE,OACIP,EAAAA,cAAA,UACIW,UAAU,gHACVF,QAASC,EACTE,KAAK,UAELZ,EAAAA,cAACD,EAAU,MACVS,EAAM,eACF,C,6FCoEjB,IAtEoCD,IAM7B,IAN8B,kBACjCM,EAAiB,kBACjBC,EAAiB,MACjBN,EAAK,aACLO,EAAY,SACZC,GACHT,EACG,MAAM,oBAAEU,IAAwBC,EAAAA,EAAAA,IAAcC,IACnC,CAAEF,oBAAqBE,EAAMF,wBAIlCG,EAAmBN,EAEzB,OACId,EAAAA,cAAA,OAAKW,UAAU,QACXX,EAAAA,cAAA,OAAKW,UAAU,yBACXX,EAAAA,cAAA,OAAKqB,IAAKC,EAAAA,EAASC,IAAI,WAAWZ,UAAU,2BAEhDX,EAAAA,cAAA,OAAKW,UAAU,oCACXX,EAAAA,cAAA,WACIA,EAAAA,cAAA,OAAKqB,IAAKG,EAAAA,EAAMD,IAAI,OAAOZ,UAAU,yBAEzCX,EAAAA,cAAA,QACIW,UAAU,kDACVc,SAAUV,GAEVf,EAAAA,cAAA,MAAIW,UAAU,2BAA2BH,GACzCR,EAAAA,cAAA,OAAKW,UAAU,cACXX,EAAAA,cAAA,SAAO0B,QAAQ,SAAQ,SACvB1B,EAAAA,cAAA,SACIW,UAAU,oBACVC,KAAK,QACLe,KAAK,QACLC,GAAG,QACHC,YAAY,QACZC,UAAQ,MAGdhB,GACEd,EAAAA,cAAA,OAAKW,UAAU,cACXX,EAAAA,cAAA,SAAO0B,QAAQ,YAAW,YAC1B1B,EAAAA,cAAA,SACIW,UAAU,aACVC,KAAK,WACLe,KAAK,WACLC,GAAG,WACHC,YAAY,WACZC,UAAQ,KAIpB9B,EAAAA,cAAA,UAAQW,UAAU,mCAAmCC,KAAK,UAAS,WAGjEQ,GACEpB,EAAAA,cAAC+B,EAAAA,EAAY,CAACvB,MAAOA,EAAOC,QAASQ,IAEzCjB,EAAAA,cAAA,WAAMgB,GACLH,GACGb,EAAAA,cAAA,WAAK,oBACgBA,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAG,mBAAkB,qBAK1D,C,0HC3Bd,UA9CeC,KACX,MAAM,WAAEC,EAAU,WAAEC,IAAeC,EAAAA,EAAAA,MAC7B,OAAEC,IAAWC,EAAAA,EAAAA,GAAkB,CAAEC,YAAY,EAAOC,WAAYC,EAAAA,GAAAA,aAEhE,+BAAEC,EAA8B,sBAAEC,IAA0B1B,EAAAA,EAAAA,IAC7DC,IACU,CACHwB,+BAAgCxB,EAAMwB,+BACtCC,sBAAuBzB,EAAMyB,0BAKzC,IAAKN,EAAQ,OAAO,KAwBpB,OACItC,EAAAA,cAAC6C,EAAAA,EAAU,CAACrC,MAAM,UAAUO,aAvBhC+B,eAA4BC,GACxBX,IACAW,EAAMC,iBAEN,MACMC,GADaC,EAAAA,EAAAA,GAAQH,EAAMI,OAAeC,UACjBC,QAAO,CAACC,EAAKC,KACxCD,EAAIC,EAAK3B,IAAM2B,EAAKC,MACbF,IACR,CAAC,IAEE,MAAEG,EAAK,SAAEC,GAAkDT,EACjE,UACUN,EAA+Bc,EAAOC,EAAU,UAChDd,GACV,CAAE,MACET,EAAW,CACPwB,KAAM,uBACN/C,KAAM,SAEd,CACJ,GAIQZ,EAAAA,cAAA,WAAK,4BACwBA,EAAAA,cAACgC,EAAAA,KAAI,CAACC,GAAG,WAAU,WAEvC,C,gGC7Cd,SAASM,EAAkBqB,QAAO,IAAPA,IAAAA,EAAU,CAAC,GACzC,MAAM,WAAEpB,GAAa,EAAI,WAAEC,EAAa,WAAcmB,GAE/CC,EAAMC,IAAW5C,EAAAA,EAAAA,IAAcC,GAAU,CAACA,EAAM0C,KAAM1C,EAAM2C,YAC7D,EAACxB,EAAO,EAACyB,IAAaC,EAAAA,EAAAA,WAAUF,GAChCG,ECRH,SAAqBT,EAAOU,GAE/B,MAAM,EAACC,EAAe,EAACC,IAAqBJ,EAAAA,EAAAA,UAASR,GAgBrD,OAfAa,EAAAA,EAAAA,YACI,KAEI,MAAMC,EAAUC,YAAW,KACvBH,EAAkBZ,EAAM,GACzBU,GAIH,MAAO,KACHM,aAAaF,EAAQ,CACxB,GAEL,CAACd,EAAOU,IAELC,CACX,CDX4BM,CAAYnC,EAAQ,GAGtCoC,EAAgBlC,IAAeqB,GAAQA,EAY7C,OAVAQ,EAAAA,EAAAA,YAAU,KACDP,GAAYY,EAELZ,IAAWtB,IAAcqB,GAASA,SAAAA,EAAMc,cAGhDZ,GAAWD,IAFXc,EAAAA,EAAAA,UAAS,oBAFTA,EAAAA,EAAAA,UAASnC,EAKb,GACD,CAACqB,IAEG,CAAExB,OAAQ2B,EACrB,C,wBE1BA,IAAe,IAA0B,sD","sources":["webpack://gatsby-starter-hello-world/./src/components/icon/GoogleLogo.tsx","webpack://gatsby-starter-hello-world/./src/components/GoogleButton.tsx","webpack://gatsby-starter-hello-world/./src/components/SignUpForm.tsx","webpack://gatsby-starter-hello-world/./src/pages/old-sign-up.tsx","webpack://gatsby-starter-hello-world/./src/hooks/useProtectedRoute.js","webpack://gatsby-starter-hello-world/./src/hooks/useDebounce.js","webpack://gatsby-starter-hello-world/./src/assets/login-bg.svg"],"sourcesContent":["import React from 'react';\r\n\r\nconst GoogleLogo = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path\r\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\r\n                fill=\"#4285F4\"\r\n            />\r\n            <path\r\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\r\n                fill=\"#34A853\"\r\n            />\r\n            <path\r\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\r\n                fill=\"#FBBC05\"\r\n            />\r\n            <path\r\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\r\n                fill=\"#EA4335\"\r\n            />\r\n            <path d=\"M1 1h22v22H1z\" fill=\"none\" />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default GoogleLogo;\r\n","import React from 'react';\r\nimport GoogleLogo from './icon/GoogleLogo';\r\n\r\ntype Props = {\r\n    title: string;\r\n    onClick: () => void;\r\n};\r\n\r\nconst GoogleButton: React.FC<Props> = ({ title, onClick: handleClick }) => {\r\n    return (\r\n        <button\r\n            className=\"flex items-center gap-2 p-2 text-lg transition-shadow bg-white border rounded shadow-sm w-max hover:shadow-md\"\r\n            onClick={handleClick}\r\n            type=\"button\"\r\n        >\r\n            <GoogleLogo />\r\n            {title} with Google\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default GoogleButton;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport Logo from '../images/logo.jpeg';\r\nimport LoginBg from '../assets/login-bg.svg';\r\nimport { UserState, useUserStore } from '../store/user';\r\nimport GoogleButton from './GoogleButton';\r\n\r\ninterface Props {\r\n    showPasswordReset?: boolean;\r\n    handleSubmit: (event: React.FormEvent<HTMLFormElement>) => Promise<void>;\r\n    title: string;\r\n    hidePasswordField?: boolean;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst SignUpForm: React.FC<Props> = ({\r\n    showPasswordReset,\r\n    hidePasswordField,\r\n    title,\r\n    handleSubmit,\r\n    children,\r\n}) => {\r\n    const { createGoogleAccount } = useUserStore((state: UserState) => {\r\n        return { createGoogleAccount: state.createGoogleAccount };\r\n    });\r\n\r\n    // When there's no password field it means the user can't log in\r\n    const hideGoogleSignUp = hidePasswordField;\r\n\r\n    return (\r\n        <div className=\"flex\">\r\n            <div className=\"hidden w-1/2 lg:block\">\r\n                <img src={LoginBg} alt=\"login-bg\" className=\"object-cover h-screen\" />\r\n            </div>\r\n            <div className=\"w-full p-6 pb-0 md:p-10 lg:w-1/2\">\r\n                <div>\r\n                    <img src={Logo} alt=\"logo\" className=\"object-contain h-24\" />\r\n                </div>\r\n                <form\r\n                    className=\"flex flex-col w-full h-full max-w-md gap-4 mt-8\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <h1 className=\"mb-2 text-3xl font-bold\">{title}</h1>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            className=\"w-full base-field\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {!hidePasswordField && (\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                className=\"base-field\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <button className=\"base-button md:w-max !px-16 mb-4\" type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                    {!hideGoogleSignUp && (\r\n                        <GoogleButton title={title} onClick={createGoogleAccount} />\r\n                    )}\r\n                    <div>{children}</div>\r\n                    {showPasswordReset && (\r\n                        <div>\r\n                            Forgot password? <Link to=\"/reset-password\">Reset password</Link>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { UserState, useUserStore } from '../store/user';\r\nimport SignUpForm from '../components/SignUpForm';\r\nimport { useBanner } from '../context/BannerContext';\r\nimport { useProtectedRoute } from '../hooks/useProtectedRoute';\r\nimport { APP_ROUTES } from '../constants';\r\n\r\nconst SignUp = () => {\r\n    const { showBanner, hideBanner } = useBanner();\r\n    const { loaded } = useProtectedRoute({ userLogged: false, redirectTo: APP_ROUTES.DASHBOARD });\r\n\r\n    const { createUserWithEmailAndPassword, sendVerificationEmail } = useUserStore(\r\n        (state: UserState) => {\r\n            return {\r\n                createUserWithEmailAndPassword: state.createUserWithEmailAndPassword,\r\n                sendVerificationEmail: state.sendVerificationEmail,\r\n            };\r\n        }\r\n    );\r\n\r\n    if (!loaded) return null;\r\n\r\n    async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n        hideBanner();\r\n        event.preventDefault();\r\n\r\n        const elementsArray = [...(event.target as any).elements];\r\n        const formData = elementsArray.reduce((acc, elem) => {\r\n            acc[elem.id] = elem.value;\r\n            return acc;\r\n        }, {});\r\n\r\n        const { email, password }: { email: string; password: string } = formData;\r\n        try {\r\n            await createUserWithEmailAndPassword(email, password, '');\r\n            await sendVerificationEmail();\r\n        } catch {\r\n            showBanner({\r\n                text: 'Something went wrong',\r\n                type: 'error',\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <SignUpForm title=\"Sign Up\" handleSubmit={handleSubmit}>\r\n            <div>\r\n                Already have an account? <Link to=\"/log-in\">Log In</Link>\r\n            </div>\r\n        </SignUpForm>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import { useUserStore } from '../store/user';\r\nimport { useDebounce } from './useDebounce';\r\nimport { useEffect, useState } from 'react';\r\nimport { navigate } from 'gatsby';\r\n\r\nexport function useProtectedRoute(options = {}) {\r\n    const { userLogged = true, redirectTo = '/log-in' } = options;\r\n\r\n    const [user, loading] = useUserStore((state) => [state.user, state.loading]);\r\n    const [loaded, setLoaded] = useState(!loading);\r\n    const debouncedLoaded = useDebounce(loaded, 1);\r\n    // if userLogged is passed as an option we check to see if user is defined, else we check for\r\n    // user not to? be defined\r\n    const userCondition = userLogged ? !!user : !user;\r\n\r\n    useEffect(() => {\r\n        if (!loading && !userCondition) {\r\n            navigate(redirectTo);\r\n        } else if (!loading && userLogged && user && !user?.emailVerified) {\r\n            navigate('/verify-message');\r\n        } else {\r\n            setLoaded(!loading);\r\n        }\r\n    }, [loading]);\r\n\r\n    return { loaded: debouncedLoaded };\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport function useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n        () => {\r\n            // Update debounced value after delay\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n            // Cancel the timeout if value changes (also on delay change or unmount)\r\n            // This is how we prevent debounced value from updating if value is changed ...\r\n            // .. within the delay period. Timeout gets cleared and restarted.\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n","export default __webpack_public_path__ + \"static/login-bg-12cb0a50a99eb339e336969c3b0fa143.svg\";"],"names":["GoogleLogo","React","xmlns","height","viewBox","width","d","fill","_ref","title","onClick","handleClick","className","type","showPasswordReset","hidePasswordField","handleSubmit","children","createGoogleAccount","useUserStore","state","hideGoogleSignUp","src","LoginBg","alt","Logo","onSubmit","htmlFor","name","id","placeholder","required","GoogleButton","Link","to","SignUp","showBanner","hideBanner","useBanner","loaded","useProtectedRoute","userLogged","redirectTo","APP_ROUTES","createUserWithEmailAndPassword","sendVerificationEmail","SignUpForm","async","event","preventDefault","formData","_toConsumableArray","target","elements","reduce","acc","elem","value","email","password","text","options","user","loading","setLoaded","useState","debouncedLoaded","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","userCondition","emailVerified","navigate"],"sourceRoot":""}