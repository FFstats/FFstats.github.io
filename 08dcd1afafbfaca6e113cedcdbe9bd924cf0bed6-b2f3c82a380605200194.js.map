{"version":3,"file":"08dcd1afafbfaca6e113cedcdbe9bd924cf0bed6-b2f3c82a380605200194.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/constants/index.ts","webpack://gatsby-starter-hello-world/./node_modules/@firebase/app-compat/dist/esm/index.esm2017.js","webpack://gatsby-starter-hello-world/./node_modules/firebase/compat/app/dist/esm/index.esm.js","webpack://gatsby-starter-hello-world/./node_modules/@firebase/auth/dist/esm2017/internal.js","webpack://gatsby-starter-hello-world/./node_modules/@firebase/auth-compat/dist/index.esm2017.js","webpack://gatsby-starter-hello-world/./node_modules/@firebase/firestore-compat/dist/index.esm2017.js","webpack://gatsby-starter-hello-world/./src/lib/firebase.ts","webpack://gatsby-starter-hello-world/./node_modules/zustand/esm/middleware.mjs","webpack://gatsby-starter-hello-world/./src/store/user.ts","webpack://gatsby-starter-hello-world/./src/images/logo.jpeg","webpack://gatsby-starter-hello-world/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","webpack://gatsby-starter-hello-world/./node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","webpack://gatsby-starter-hello-world/./node_modules/use-sync-external-store/shim/index.js","webpack://gatsby-starter-hello-world/./node_modules/use-sync-external-store/shim/with-selector.js","webpack://gatsby-starter-hello-world/./node_modules/zustand/esm/vanilla.mjs","webpack://gatsby-starter-hello-world/./node_modules/zustand/esm/index.mjs"],"sourcesContent":["export const API_URL = `${process.env.GATSBY_API_URL}/.netlify/functions`;\r\n\r\nexport const STORAGE_KEYS = {\r\n    YAHOO_KEY: 'yahoo_cache',\r\n};\r\n\r\nexport const YAHOO_URL = `https://api.login.yahoo.com/oauth2/request_auth?response_type=code&redirect_uri=${process.env.GATSBY_WEBSITE_URL}&client_id=dj0yJmk9MkNLSmxtTUJMYWhjJmQ9WVdrOVpYUk1hWHBJTXpRbWNHbzlNQS0tJnM9Y29uc3VtZXJzZWNyZXQmc3Y9MCZ4PWVi`;\r\n\r\nconst APP_BASE_PATH = '';\r\n\r\nexport const APP_ROUTES = {\r\n    LOGIN: '/log-in',\r\n    SIGNUP: '/sign-up',\r\n    DASHBOARD: APP_BASE_PATH + '/dashboard',\r\n    MERGE_LEAGUES: APP_BASE_PATH + '/merge-duplicates',\r\n    THANK_YOU: APP_BASE_PATH + '/thank-you',\r\n    AUTH_CODES: APP_BASE_PATH + '/auth',\r\n};\r\n","import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return deleteApp(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* InstantiationMode.EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        _addComponent(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        _addOrOverwriteComponent(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: modularAPIs.registerVersion,\r\n        setLogLevel: modularAPIs.setLogLevel,\r\n        onLog: modularAPIs.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: modularAPIs.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || modularAPIs._DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = modularAPIs.initializeApp(options, rawConfig);\r\n        if (contains(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (modularAPIs._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* ComponentType.PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* ComponentType.PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe,\r\n        ErrorFactory,\r\n        deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.2.10\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\nexport { firebase as default };\n//# sourceMappingURL=index.esm2017.js.map\n","import firebase from '@firebase/app-compat';\nexport { default } from '@firebase/app-compat';\n\nvar name = \"firebase\";\nvar version = \"9.22.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app-compat');\n//# sourceMappingURL=index.esm.js.map\n","import { as as debugAssert, at as _isIOS, au as _isAndroid, av as _fail, aw as _getRedirectUrl, ax as _getProjectConfig, ay as _isIOS7Or8, az as _createError, aA as _assert, aB as AuthEventManager, aC as _getInstance, b as browserLocalPersistence, aD as _persistenceKeyName, a as browserSessionPersistence, aE as _getRedirectResult, aF as _overrideRedirectResult, aG as _clearRedirectOutcomes, aH as _castAuth } from './index-e3d5d3f4.js';\nexport { A as ActionCodeOperation, ag as ActionCodeURL, J as AuthCredential, G as AuthErrorCodes, aJ as AuthImpl, aM as AuthPopup, K as EmailAuthCredential, Q as EmailAuthProvider, U as FacebookAuthProvider, F as FactorId, aN as FetchProvider, W as GithubAuthProvider, V as GoogleAuthProvider, L as OAuthCredential, X as OAuthProvider, O as OperationType, M as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, p as ProviderId, R as RecaptchaVerifier, aO as SAMLAuthCredential, Y as SAMLAuthProvider, S as SignInMethod, T as TotpMultiFactorGenerator, n as TotpSecret, Z as TwitterAuthProvider, aI as UserImpl, aA as _assert, aH as _castAuth, av as _fail, aL as _generateEventId, aK as _getClientVersion, aC as _getInstance, aE as _getRedirectResult, aF as _overrideRedirectResult, aD as _persistenceKeyName, a5 as applyActionCode, w as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a6 as checkActionCode, a4 as confirmPasswordReset, I as connectAuthEmulator, a8 as createUserWithEmailAndPassword, D as debugErrorMap, C as deleteUser, ad as fetchSignInMethodsForEmail, ao as getAdditionalUserInfo, o as getAuth, al as getIdToken, am as getIdTokenResult, aq as getMultiFactorResolver, j as getRedirectResult, N as inMemoryPersistence, i as indexedDBLocalPersistence, H as initializeAuth, t as initializeRecaptchaConfig, ab as isSignInWithEmailLink, a0 as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, ar as multiFactor, x as onAuthStateChanged, v as onIdTokenChanged, ah as parseActionCodeURL, E as prodErrorMap, a1 as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, ap as reload, ae as sendEmailVerification, a3 as sendPasswordResetEmail, aa as sendSignInLinkToEmail, q as setPersistence, _ as signInAnonymously, $ as signInWithCredential, a2 as signInWithCustomToken, a9 as signInWithEmailAndPassword, ac as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, B as signOut, an as unlink, z as updateCurrentUser, aj as updateEmail, ak as updatePassword, u as updatePhoneNumber, ai as updateProfile, y as useDeviceLanguage, af as verifyBeforeUpdateEmail, a7 as verifyPasswordResetCode } from './index-e3d5d3f4.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* AuthEventType.UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n//# sourceMappingURL=internal.js.map\n","import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters, \r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth());\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n//# sourceMappingURL=index.esm2017.js.map\n","import firebase from '@firebase/app-compat';\nimport { FirestoreError, Bytes, _isBase64Available, enableIndexedDbPersistence, enableMultiTabIndexedDbPersistence, clearIndexedDbPersistence, _DatabaseId, _logWarn, connectFirestoreEmulator, enableNetwork, disableNetwork, _validateIsNotUsedTogether, waitForPendingWrites, onSnapshotsInSync, collection, doc, collectionGroup, runTransaction, ensureFirestoreConfigured, WriteBatch as WriteBatch$1, executeWrite, loadBundle, namedQuery, DocumentSnapshot as DocumentSnapshot$1, DocumentReference as DocumentReference$1, _DocumentKey, refEqual, setDoc, updateDoc, deleteDoc, onSnapshot, getDocFromCache, getDocFromServer, getDoc, snapshotEqual, query, where, orderBy, limit, limitToLast, startAt, startAfter, endBefore, endAt, queryEqual, getDocsFromCache, getDocsFromServer, getDocs, QuerySnapshot as QuerySnapshot$1, addDoc, _cast, AbstractUserDataWriter, setLogLevel as setLogLevel$1, QueryDocumentSnapshot as QueryDocumentSnapshot$1, _debugAssert, FieldPath as FieldPath$1, _FieldPath, serverTimestamp, deleteField, arrayUnion, arrayRemove, increment, GeoPoint, Timestamp, CACHE_SIZE_UNLIMITED } from '@firebase/firestore';\nimport { getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\nconst name = \"@firebase/firestore-compat\";\nconst version = \"0.3.9\";\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction validateSetOptions(methodName, options) {\r\n    if (options === undefined) {\r\n        return {\r\n            merge: false\r\n        };\r\n    }\r\n    if (options.mergeFields !== undefined && options.merge !== undefined) {\r\n        throw new FirestoreError('invalid-argument', `Invalid options passed to function ${methodName}(): You cannot ` +\r\n            'specify both \"merge\" and \"mergeFields\".');\r\n    }\r\n    return options;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Helper function to assert Uint8Array is available at runtime. */\r\nfunction assertUint8ArrayAvailable() {\r\n    if (typeof Uint8Array === 'undefined') {\r\n        throw new FirestoreError('unimplemented', 'Uint8Arrays are not available in this environment.');\r\n    }\r\n}\r\n/** Helper function to assert Base64 functions are available at runtime. */\r\nfunction assertBase64Available() {\r\n    if (!_isBase64Available()) {\r\n        throw new FirestoreError('unimplemented', 'Blobs are unavailable in Firestore in this environment.');\r\n    }\r\n}\r\n/** Immutable class holding a blob (binary data) */\r\nclass Blob {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    static fromBase64String(base64) {\r\n        assertBase64Available();\r\n        return new Blob(Bytes.fromBase64String(base64));\r\n    }\r\n    static fromUint8Array(array) {\r\n        assertUint8ArrayAvailable();\r\n        return new Blob(Bytes.fromUint8Array(array));\r\n    }\r\n    toBase64() {\r\n        assertBase64Available();\r\n        return this._delegate.toBase64();\r\n    }\r\n    toUint8Array() {\r\n        assertUint8ArrayAvailable();\r\n        return this._delegate.toUint8Array();\r\n    }\r\n    isEqual(other) {\r\n        return this._delegate.isEqual(other._delegate);\r\n    }\r\n    toString() {\r\n        return 'Blob(base64: ' + this.toBase64() + ')';\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isPartialObserver(obj) {\r\n    return implementsAnyMethods(obj, ['next', 'error', 'complete']);\r\n}\r\n/**\r\n * Returns true if obj is an object and contains at least one of the specified\r\n * methods.\r\n */\r\nfunction implementsAnyMethods(obj, methods) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return false;\r\n    }\r\n    const object = obj;\r\n    for (const method of methods) {\r\n        if (method in object && typeof object[method] === 'function') {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The persistence provider included with the full Firestore SDK.\r\n */\r\nclass IndexedDbPersistenceProvider {\r\n    enableIndexedDbPersistence(firestore, forceOwnership) {\r\n        return enableIndexedDbPersistence(firestore._delegate, { forceOwnership });\r\n    }\r\n    enableMultiTabIndexedDbPersistence(firestore) {\r\n        return enableMultiTabIndexedDbPersistence(firestore._delegate);\r\n    }\r\n    clearIndexedDbPersistence(firestore) {\r\n        return clearIndexedDbPersistence(firestore._delegate);\r\n    }\r\n}\r\n/**\r\n * Compat class for Firestore. Exposes Firestore Legacy API, but delegates\r\n * to the functional API of firestore-exp.\r\n */\r\nclass Firestore {\r\n    constructor(databaseIdOrApp, _delegate, _persistenceProvider) {\r\n        this._delegate = _delegate;\r\n        this._persistenceProvider = _persistenceProvider;\r\n        this.INTERNAL = {\r\n            delete: () => this.terminate()\r\n        };\r\n        if (!(databaseIdOrApp instanceof _DatabaseId)) {\r\n            this._appCompat = databaseIdOrApp;\r\n        }\r\n    }\r\n    get _databaseId() {\r\n        return this._delegate._databaseId;\r\n    }\r\n    settings(settingsLiteral) {\r\n        const currentSettings = this._delegate._getSettings();\r\n        if (!settingsLiteral.merge &&\r\n            currentSettings.host !== settingsLiteral.host) {\r\n            _logWarn('You are overriding the original host. If you did not intend ' +\r\n                'to override your settings, use {merge: true}.');\r\n        }\r\n        if (settingsLiteral.merge) {\r\n            settingsLiteral = Object.assign(Object.assign({}, currentSettings), settingsLiteral);\r\n            // Remove the property from the settings once the merge is completed\r\n            delete settingsLiteral.merge;\r\n        }\r\n        this._delegate._setSettings(settingsLiteral);\r\n    }\r\n    useEmulator(host, port, options = {}) {\r\n        connectFirestoreEmulator(this._delegate, host, port, options);\r\n    }\r\n    enableNetwork() {\r\n        return enableNetwork(this._delegate);\r\n    }\r\n    disableNetwork() {\r\n        return disableNetwork(this._delegate);\r\n    }\r\n    enablePersistence(settings) {\r\n        let synchronizeTabs = false;\r\n        let experimentalForceOwningTab = false;\r\n        if (settings) {\r\n            synchronizeTabs = !!settings.synchronizeTabs;\r\n            experimentalForceOwningTab = !!settings.experimentalForceOwningTab;\r\n            _validateIsNotUsedTogether('synchronizeTabs', synchronizeTabs, 'experimentalForceOwningTab', experimentalForceOwningTab);\r\n        }\r\n        return synchronizeTabs\r\n            ? this._persistenceProvider.enableMultiTabIndexedDbPersistence(this)\r\n            : this._persistenceProvider.enableIndexedDbPersistence(this, experimentalForceOwningTab);\r\n    }\r\n    clearPersistence() {\r\n        return this._persistenceProvider.clearIndexedDbPersistence(this);\r\n    }\r\n    terminate() {\r\n        if (this._appCompat) {\r\n            this._appCompat._removeServiceInstance('firestore-compat');\r\n            this._appCompat._removeServiceInstance('firestore');\r\n        }\r\n        return this._delegate._delete();\r\n    }\r\n    waitForPendingWrites() {\r\n        return waitForPendingWrites(this._delegate);\r\n    }\r\n    onSnapshotsInSync(arg) {\r\n        return onSnapshotsInSync(this._delegate, arg);\r\n    }\r\n    get app() {\r\n        if (!this._appCompat) {\r\n            throw new FirestoreError('failed-precondition', \"Firestore was not initialized using the Firebase SDK. 'app' is \" +\r\n                'not available');\r\n        }\r\n        return this._appCompat;\r\n    }\r\n    collection(pathString) {\r\n        try {\r\n            return new CollectionReference(this, collection(this._delegate, pathString));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'collection()', 'Firestore.collection()');\r\n        }\r\n    }\r\n    doc(pathString) {\r\n        try {\r\n            return new DocumentReference(this, doc(this._delegate, pathString));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'doc()', 'Firestore.doc()');\r\n        }\r\n    }\r\n    collectionGroup(collectionId) {\r\n        try {\r\n            return new Query(this, collectionGroup(this._delegate, collectionId));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'collectionGroup()', 'Firestore.collectionGroup()');\r\n        }\r\n    }\r\n    runTransaction(updateFunction) {\r\n        return runTransaction(this._delegate, transaction => updateFunction(new Transaction(this, transaction)));\r\n    }\r\n    batch() {\r\n        ensureFirestoreConfigured(this._delegate);\r\n        return new WriteBatch(new WriteBatch$1(this._delegate, mutations => executeWrite(this._delegate, mutations)));\r\n    }\r\n    loadBundle(bundleData) {\r\n        return loadBundle(this._delegate, bundleData);\r\n    }\r\n    namedQuery(name) {\r\n        return namedQuery(this._delegate, name).then(expQuery => {\r\n            if (!expQuery) {\r\n                return null;\r\n            }\r\n            return new Query(this, \r\n            // We can pass `expQuery` here directly since named queries don't have a UserDataConverter.\r\n            // Otherwise, we would have to create a new ExpQuery and pass the old UserDataConverter.\r\n            expQuery);\r\n        });\r\n    }\r\n}\r\nclass UserDataWriter extends AbstractUserDataWriter {\r\n    constructor(firestore) {\r\n        super();\r\n        this.firestore = firestore;\r\n    }\r\n    convertBytes(bytes) {\r\n        return new Blob(new Bytes(bytes));\r\n    }\r\n    convertReference(name) {\r\n        const key = this.convertDocumentKey(name, this.firestore._databaseId);\r\n        return DocumentReference.forKey(key, this.firestore, /* converter= */ null);\r\n    }\r\n}\r\nfunction setLogLevel(level) {\r\n    setLogLevel$1(level);\r\n}\r\n/**\r\n * A reference to a transaction.\r\n */\r\nclass Transaction {\r\n    constructor(_firestore, _delegate) {\r\n        this._firestore = _firestore;\r\n        this._delegate = _delegate;\r\n        this._userDataWriter = new UserDataWriter(_firestore);\r\n    }\r\n    get(documentRef) {\r\n        const ref = castReference(documentRef);\r\n        return this._delegate\r\n            .get(ref)\r\n            .then(result => new DocumentSnapshot(this._firestore, new DocumentSnapshot$1(this._firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, ref.converter)));\r\n    }\r\n    set(documentRef, data, options) {\r\n        const ref = castReference(documentRef);\r\n        if (options) {\r\n            validateSetOptions('Transaction.set', options);\r\n            this._delegate.set(ref, data, options);\r\n        }\r\n        else {\r\n            this._delegate.set(ref, data);\r\n        }\r\n        return this;\r\n    }\r\n    update(documentRef, dataOrField, value, ...moreFieldsAndValues) {\r\n        const ref = castReference(documentRef);\r\n        if (arguments.length === 2) {\r\n            this._delegate.update(ref, dataOrField);\r\n        }\r\n        else {\r\n            this._delegate.update(ref, dataOrField, value, ...moreFieldsAndValues);\r\n        }\r\n        return this;\r\n    }\r\n    delete(documentRef) {\r\n        const ref = castReference(documentRef);\r\n        this._delegate.delete(ref);\r\n        return this;\r\n    }\r\n}\r\nclass WriteBatch {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    set(documentRef, data, options) {\r\n        const ref = castReference(documentRef);\r\n        if (options) {\r\n            validateSetOptions('WriteBatch.set', options);\r\n            this._delegate.set(ref, data, options);\r\n        }\r\n        else {\r\n            this._delegate.set(ref, data);\r\n        }\r\n        return this;\r\n    }\r\n    update(documentRef, dataOrField, value, ...moreFieldsAndValues) {\r\n        const ref = castReference(documentRef);\r\n        if (arguments.length === 2) {\r\n            this._delegate.update(ref, dataOrField);\r\n        }\r\n        else {\r\n            this._delegate.update(ref, dataOrField, value, ...moreFieldsAndValues);\r\n        }\r\n        return this;\r\n    }\r\n    delete(documentRef) {\r\n        const ref = castReference(documentRef);\r\n        this._delegate.delete(ref);\r\n        return this;\r\n    }\r\n    commit() {\r\n        return this._delegate.commit();\r\n    }\r\n}\r\n/**\r\n * Wraps a `PublicFirestoreDataConverter` translating the types from the\r\n * experimental SDK into corresponding types from the Classic SDK before passing\r\n * them to the wrapped converter.\r\n */\r\nclass FirestoreDataConverter {\r\n    constructor(_firestore, _userDataWriter, _delegate) {\r\n        this._firestore = _firestore;\r\n        this._userDataWriter = _userDataWriter;\r\n        this._delegate = _delegate;\r\n    }\r\n    fromFirestore(snapshot, options) {\r\n        const expSnapshot = new QueryDocumentSnapshot$1(this._firestore._delegate, this._userDataWriter, snapshot._key, snapshot._document, snapshot.metadata, \r\n        /* converter= */ null);\r\n        return this._delegate.fromFirestore(new QueryDocumentSnapshot(this._firestore, expSnapshot), options !== null && options !== void 0 ? options : {});\r\n    }\r\n    toFirestore(modelObject, options) {\r\n        if (!options) {\r\n            return this._delegate.toFirestore(modelObject);\r\n        }\r\n        else {\r\n            return this._delegate.toFirestore(modelObject, options);\r\n        }\r\n    }\r\n    // Use the same instance of `FirestoreDataConverter` for the given instances\r\n    // of `Firestore` and `PublicFirestoreDataConverter` so that isEqual() will\r\n    // compare equal for two objects created with the same converter instance.\r\n    static getInstance(firestore, converter) {\r\n        const converterMapByFirestore = FirestoreDataConverter.INSTANCES;\r\n        let untypedConverterByConverter = converterMapByFirestore.get(firestore);\r\n        if (!untypedConverterByConverter) {\r\n            untypedConverterByConverter = new WeakMap();\r\n            converterMapByFirestore.set(firestore, untypedConverterByConverter);\r\n        }\r\n        let instance = untypedConverterByConverter.get(converter);\r\n        if (!instance) {\r\n            instance = new FirestoreDataConverter(firestore, new UserDataWriter(firestore), converter);\r\n            untypedConverterByConverter.set(converter, instance);\r\n        }\r\n        return instance;\r\n    }\r\n}\r\nFirestoreDataConverter.INSTANCES = new WeakMap();\r\n/**\r\n * A reference to a particular document in a collection in the database.\r\n */\r\nclass DocumentReference {\r\n    constructor(firestore, _delegate) {\r\n        this.firestore = firestore;\r\n        this._delegate = _delegate;\r\n        this._userDataWriter = new UserDataWriter(firestore);\r\n    }\r\n    static forPath(path, firestore, converter) {\r\n        if (path.length % 2 !== 0) {\r\n            throw new FirestoreError('invalid-argument', 'Invalid document reference. Document ' +\r\n                'references must have an even number of segments, but ' +\r\n                `${path.canonicalString()} has ${path.length}`);\r\n        }\r\n        return new DocumentReference(firestore, new DocumentReference$1(firestore._delegate, converter, new _DocumentKey(path)));\r\n    }\r\n    static forKey(key, firestore, converter) {\r\n        return new DocumentReference(firestore, new DocumentReference$1(firestore._delegate, converter, key));\r\n    }\r\n    get id() {\r\n        return this._delegate.id;\r\n    }\r\n    get parent() {\r\n        return new CollectionReference(this.firestore, this._delegate.parent);\r\n    }\r\n    get path() {\r\n        return this._delegate.path;\r\n    }\r\n    collection(pathString) {\r\n        try {\r\n            return new CollectionReference(this.firestore, collection(this._delegate, pathString));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'collection()', 'DocumentReference.collection()');\r\n        }\r\n    }\r\n    isEqual(other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof DocumentReference$1)) {\r\n            return false;\r\n        }\r\n        return refEqual(this._delegate, other);\r\n    }\r\n    set(value, options) {\r\n        options = validateSetOptions('DocumentReference.set', options);\r\n        try {\r\n            if (options) {\r\n                return setDoc(this._delegate, value, options);\r\n            }\r\n            else {\r\n                return setDoc(this._delegate, value);\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'setDoc()', 'DocumentReference.set()');\r\n        }\r\n    }\r\n    update(fieldOrUpdateData, value, ...moreFieldsAndValues) {\r\n        try {\r\n            if (arguments.length === 1) {\r\n                return updateDoc(this._delegate, fieldOrUpdateData);\r\n            }\r\n            else {\r\n                return updateDoc(this._delegate, fieldOrUpdateData, value, ...moreFieldsAndValues);\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'updateDoc()', 'DocumentReference.update()');\r\n        }\r\n    }\r\n    delete() {\r\n        return deleteDoc(this._delegate);\r\n    }\r\n    onSnapshot(...args) {\r\n        const options = extractSnapshotOptions(args);\r\n        const observer = wrapObserver(args, result => new DocumentSnapshot(this.firestore, new DocumentSnapshot$1(this.firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, this._delegate.converter)));\r\n        return onSnapshot(this._delegate, options, observer);\r\n    }\r\n    get(options) {\r\n        let snap;\r\n        if ((options === null || options === void 0 ? void 0 : options.source) === 'cache') {\r\n            snap = getDocFromCache(this._delegate);\r\n        }\r\n        else if ((options === null || options === void 0 ? void 0 : options.source) === 'server') {\r\n            snap = getDocFromServer(this._delegate);\r\n        }\r\n        else {\r\n            snap = getDoc(this._delegate);\r\n        }\r\n        return snap.then(result => new DocumentSnapshot(this.firestore, new DocumentSnapshot$1(this.firestore._delegate, this._userDataWriter, result._key, result._document, result.metadata, this._delegate.converter)));\r\n    }\r\n    withConverter(converter) {\r\n        return new DocumentReference(this.firestore, converter\r\n            ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter))\r\n            : this._delegate.withConverter(null));\r\n    }\r\n}\r\n/**\r\n * Replaces the function name in an error thrown by the firestore-exp API\r\n * with the function names used in the classic API.\r\n */\r\nfunction replaceFunctionName(e, original, updated) {\r\n    e.message = e.message.replace(original, updated);\r\n    return e;\r\n}\r\n/**\r\n * Iterates the list of arguments from an `onSnapshot` call and returns the\r\n * first argument that may be an `SnapshotListenOptions` object. Returns an\r\n * empty object if none is found.\r\n */\r\nfunction extractSnapshotOptions(args) {\r\n    for (const arg of args) {\r\n        if (typeof arg === 'object' && !isPartialObserver(arg)) {\r\n            return arg;\r\n        }\r\n    }\r\n    return {};\r\n}\r\n/**\r\n * Creates an observer that can be passed to the firestore-exp SDK. The\r\n * observer converts all observed values into the format expected by the classic\r\n * SDK.\r\n *\r\n * @param args - The list of arguments from an `onSnapshot` call.\r\n * @param wrapper - The function that converts the firestore-exp type into the\r\n * type used by this shim.\r\n */\r\nfunction wrapObserver(args, wrapper) {\r\n    var _a, _b;\r\n    let userObserver;\r\n    if (isPartialObserver(args[0])) {\r\n        userObserver = args[0];\r\n    }\r\n    else if (isPartialObserver(args[1])) {\r\n        userObserver = args[1];\r\n    }\r\n    else if (typeof args[0] === 'function') {\r\n        userObserver = {\r\n            next: args[0],\r\n            error: args[1],\r\n            complete: args[2]\r\n        };\r\n    }\r\n    else {\r\n        userObserver = {\r\n            next: args[1],\r\n            error: args[2],\r\n            complete: args[3]\r\n        };\r\n    }\r\n    return {\r\n        next: val => {\r\n            if (userObserver.next) {\r\n                userObserver.next(wrapper(val));\r\n            }\r\n        },\r\n        error: (_a = userObserver.error) === null || _a === void 0 ? void 0 : _a.bind(userObserver),\r\n        complete: (_b = userObserver.complete) === null || _b === void 0 ? void 0 : _b.bind(userObserver)\r\n    };\r\n}\r\nclass DocumentSnapshot {\r\n    constructor(_firestore, _delegate) {\r\n        this._firestore = _firestore;\r\n        this._delegate = _delegate;\r\n    }\r\n    get ref() {\r\n        return new DocumentReference(this._firestore, this._delegate.ref);\r\n    }\r\n    get id() {\r\n        return this._delegate.id;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get exists() {\r\n        return this._delegate.exists();\r\n    }\r\n    data(options) {\r\n        return this._delegate.data(options);\r\n    }\r\n    get(fieldPath, options\r\n    // We are using `any` here to avoid an explicit cast by our users.\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ) {\r\n        return this._delegate.get(fieldPath, options);\r\n    }\r\n    isEqual(other) {\r\n        return snapshotEqual(this._delegate, other._delegate);\r\n    }\r\n}\r\nclass QueryDocumentSnapshot extends DocumentSnapshot {\r\n    data(options) {\r\n        const data = this._delegate.data(options);\r\n        _debugAssert(data !== undefined, 'Document in a QueryDocumentSnapshot should exist');\r\n        return data;\r\n    }\r\n}\r\nclass Query {\r\n    constructor(firestore, _delegate) {\r\n        this.firestore = firestore;\r\n        this._delegate = _delegate;\r\n        this._userDataWriter = new UserDataWriter(firestore);\r\n    }\r\n    where(fieldPath, opStr, value) {\r\n        try {\r\n            // The \"as string\" cast is a little bit of a hack. `where` accepts the\r\n            // FieldPath Compat type as input, but is not typed as such in order to\r\n            // not expose this via our public typings file.\r\n            return new Query(this.firestore, query(this._delegate, where(fieldPath, opStr, value)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, /(orderBy|where)\\(\\)/, 'Query.$1()');\r\n        }\r\n    }\r\n    orderBy(fieldPath, directionStr) {\r\n        try {\r\n            // The \"as string\" cast is a little bit of a hack. `orderBy` accepts the\r\n            // FieldPath Compat type as input, but is not typed as such in order to\r\n            // not expose this via our public typings file.\r\n            return new Query(this.firestore, query(this._delegate, orderBy(fieldPath, directionStr)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, /(orderBy|where)\\(\\)/, 'Query.$1()');\r\n        }\r\n    }\r\n    limit(n) {\r\n        try {\r\n            return new Query(this.firestore, query(this._delegate, limit(n)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'limit()', 'Query.limit()');\r\n        }\r\n    }\r\n    limitToLast(n) {\r\n        try {\r\n            return new Query(this.firestore, query(this._delegate, limitToLast(n)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'limitToLast()', 'Query.limitToLast()');\r\n        }\r\n    }\r\n    startAt(...args) {\r\n        try {\r\n            return new Query(this.firestore, query(this._delegate, startAt(...args)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'startAt()', 'Query.startAt()');\r\n        }\r\n    }\r\n    startAfter(...args) {\r\n        try {\r\n            return new Query(this.firestore, query(this._delegate, startAfter(...args)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'startAfter()', 'Query.startAfter()');\r\n        }\r\n    }\r\n    endBefore(...args) {\r\n        try {\r\n            return new Query(this.firestore, query(this._delegate, endBefore(...args)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'endBefore()', 'Query.endBefore()');\r\n        }\r\n    }\r\n    endAt(...args) {\r\n        try {\r\n            return new Query(this.firestore, query(this._delegate, endAt(...args)));\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'endAt()', 'Query.endAt()');\r\n        }\r\n    }\r\n    isEqual(other) {\r\n        return queryEqual(this._delegate, other._delegate);\r\n    }\r\n    get(options) {\r\n        let query;\r\n        if ((options === null || options === void 0 ? void 0 : options.source) === 'cache') {\r\n            query = getDocsFromCache(this._delegate);\r\n        }\r\n        else if ((options === null || options === void 0 ? void 0 : options.source) === 'server') {\r\n            query = getDocsFromServer(this._delegate);\r\n        }\r\n        else {\r\n            query = getDocs(this._delegate);\r\n        }\r\n        return query.then(result => new QuerySnapshot(this.firestore, new QuerySnapshot$1(this.firestore._delegate, this._userDataWriter, this._delegate, result._snapshot)));\r\n    }\r\n    onSnapshot(...args) {\r\n        const options = extractSnapshotOptions(args);\r\n        const observer = wrapObserver(args, snap => new QuerySnapshot(this.firestore, new QuerySnapshot$1(this.firestore._delegate, this._userDataWriter, this._delegate, snap._snapshot)));\r\n        return onSnapshot(this._delegate, options, observer);\r\n    }\r\n    withConverter(converter) {\r\n        return new Query(this.firestore, converter\r\n            ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter))\r\n            : this._delegate.withConverter(null));\r\n    }\r\n}\r\nclass DocumentChange {\r\n    constructor(_firestore, _delegate) {\r\n        this._firestore = _firestore;\r\n        this._delegate = _delegate;\r\n    }\r\n    get type() {\r\n        return this._delegate.type;\r\n    }\r\n    get doc() {\r\n        return new QueryDocumentSnapshot(this._firestore, this._delegate.doc);\r\n    }\r\n    get oldIndex() {\r\n        return this._delegate.oldIndex;\r\n    }\r\n    get newIndex() {\r\n        return this._delegate.newIndex;\r\n    }\r\n}\r\nclass QuerySnapshot {\r\n    constructor(_firestore, _delegate) {\r\n        this._firestore = _firestore;\r\n        this._delegate = _delegate;\r\n    }\r\n    get query() {\r\n        return new Query(this._firestore, this._delegate.query);\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get size() {\r\n        return this._delegate.size;\r\n    }\r\n    get empty() {\r\n        return this._delegate.empty;\r\n    }\r\n    get docs() {\r\n        return this._delegate.docs.map(doc => new QueryDocumentSnapshot(this._firestore, doc));\r\n    }\r\n    docChanges(options) {\r\n        return this._delegate\r\n            .docChanges(options)\r\n            .map(docChange => new DocumentChange(this._firestore, docChange));\r\n    }\r\n    forEach(callback, thisArg) {\r\n        this._delegate.forEach(snapshot => {\r\n            callback.call(thisArg, new QueryDocumentSnapshot(this._firestore, snapshot));\r\n        });\r\n    }\r\n    isEqual(other) {\r\n        return snapshotEqual(this._delegate, other._delegate);\r\n    }\r\n}\r\nclass CollectionReference extends Query {\r\n    constructor(firestore, _delegate) {\r\n        super(firestore, _delegate);\r\n        this.firestore = firestore;\r\n        this._delegate = _delegate;\r\n    }\r\n    get id() {\r\n        return this._delegate.id;\r\n    }\r\n    get path() {\r\n        return this._delegate.path;\r\n    }\r\n    get parent() {\r\n        const docRef = this._delegate.parent;\r\n        return docRef ? new DocumentReference(this.firestore, docRef) : null;\r\n    }\r\n    doc(documentPath) {\r\n        try {\r\n            if (documentPath === undefined) {\r\n                // Call `doc` without `documentPath` if `documentPath` is `undefined`\r\n                // as `doc` validates the number of arguments to prevent users from\r\n                // accidentally passing `undefined`.\r\n                return new DocumentReference(this.firestore, doc(this._delegate));\r\n            }\r\n            else {\r\n                return new DocumentReference(this.firestore, doc(this._delegate, documentPath));\r\n            }\r\n        }\r\n        catch (e) {\r\n            throw replaceFunctionName(e, 'doc()', 'CollectionReference.doc()');\r\n        }\r\n    }\r\n    add(data) {\r\n        return addDoc(this._delegate, data).then(docRef => new DocumentReference(this.firestore, docRef));\r\n    }\r\n    isEqual(other) {\r\n        return refEqual(this._delegate, other._delegate);\r\n    }\r\n    withConverter(converter) {\r\n        return new CollectionReference(this.firestore, converter\r\n            ? this._delegate.withConverter(FirestoreDataConverter.getInstance(this.firestore, converter))\r\n            : this._delegate.withConverter(null));\r\n    }\r\n}\r\nfunction castReference(documentRef) {\r\n    return _cast(documentRef, DocumentReference$1);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// The objects that are a part of this API are exposed to third-parties as\r\n// compiled javascript so we want to flag our private members with a leading\r\n// underscore to discourage their use.\r\n/**\r\n * A `FieldPath` refers to a field in a document. The path may consist of a\r\n * single field name (referring to a top-level field in the document), or a list\r\n * of field names (referring to a nested field in the document).\r\n */\r\nclass FieldPath {\r\n    /**\r\n     * Creates a FieldPath from the provided field names. If more than one field\r\n     * name is provided, the path will point to a nested field in a document.\r\n     *\r\n     * @param fieldNames - A list of field names.\r\n     */\r\n    constructor(...fieldNames) {\r\n        this._delegate = new FieldPath$1(...fieldNames);\r\n    }\r\n    static documentId() {\r\n        /**\r\n         * Internal Note: The backend doesn't technically support querying by\r\n         * document ID. Instead it queries by the entire document name (full path\r\n         * included), but in the cases we currently support documentId(), the net\r\n         * effect is the same.\r\n         */\r\n        return new FieldPath(_FieldPath.keyField().canonicalString());\r\n    }\r\n    isEqual(other) {\r\n        other = getModularInstance(other);\r\n        if (!(other instanceof FieldPath$1)) {\r\n            return false;\r\n        }\r\n        return this._delegate._internalPath.isEqual(other._internalPath);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FieldValue {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n    }\r\n    static serverTimestamp() {\r\n        const delegate = serverTimestamp();\r\n        delegate._methodName = 'FieldValue.serverTimestamp';\r\n        return new FieldValue(delegate);\r\n    }\r\n    static delete() {\r\n        const delegate = deleteField();\r\n        delegate._methodName = 'FieldValue.delete';\r\n        return new FieldValue(delegate);\r\n    }\r\n    static arrayUnion(...elements) {\r\n        const delegate = arrayUnion(...elements);\r\n        delegate._methodName = 'FieldValue.arrayUnion';\r\n        return new FieldValue(delegate);\r\n    }\r\n    static arrayRemove(...elements) {\r\n        const delegate = arrayRemove(...elements);\r\n        delegate._methodName = 'FieldValue.arrayRemove';\r\n        return new FieldValue(delegate);\r\n    }\r\n    static increment(n) {\r\n        const delegate = increment(n);\r\n        delegate._methodName = 'FieldValue.increment';\r\n        return new FieldValue(delegate);\r\n    }\r\n    isEqual(other) {\r\n        return this._delegate.isEqual(other._delegate);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst firestoreNamespace = {\r\n    Firestore,\r\n    GeoPoint,\r\n    Timestamp,\r\n    Blob,\r\n    Transaction,\r\n    WriteBatch,\r\n    DocumentReference,\r\n    DocumentSnapshot,\r\n    Query,\r\n    QueryDocumentSnapshot,\r\n    QuerySnapshot,\r\n    CollectionReference,\r\n    FieldPath,\r\n    FieldValue,\r\n    setLogLevel,\r\n    CACHE_SIZE_UNLIMITED\r\n};\r\n/**\r\n * Configures Firestore as part of the Firebase SDK by calling registerComponent.\r\n *\r\n * @param firebase - The FirebaseNamespace to register Firestore with\r\n * @param firestoreFactory - A factory function that returns a new Firestore\r\n *    instance.\r\n */\r\nfunction configureForFirebase(firebase, firestoreFactory) {\r\n    firebase.INTERNAL.registerComponent(new Component('firestore-compat', container => {\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const firestoreExp = container.getProvider('firestore').getImmediate();\r\n        return firestoreFactory(app, firestoreExp);\r\n    }, 'PUBLIC').setServiceProps(Object.assign({}, firestoreNamespace)));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Registers the main Firestore build with the components framework.\r\n * Persistence can be enabled via `firebase.firestore().enablePersistence()`.\r\n */\r\nfunction registerFirestore(instance) {\r\n    configureForFirebase(instance, (app, firestoreExp) => new Firestore(app, firestoreExp, new IndexedDbPersistenceProvider()));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterFirestore(firebase);\n\nexport { registerFirestore };\n//# sourceMappingURL=index.esm2017.js.map\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\n\r\nexport function getFirebase() {\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp({\r\n            apiKey: process.env.FIREBASE_API_KEY,\r\n            authDomain: process.env.FIREBASE_AUTH_DOMAIN,\r\n            databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n            projectId: process.env.FIREBASE_PROJECT_ID,\r\n            storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\r\n            messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n            appId: process.env.FIREBASE_APP_ID,\r\n            measurementId: process.env.FIREBASE_MEASUREMENT_ID,\r\n        });\r\n        // use emulator for firestore\r\n        if (process.env.NODE_ENV === 'development') {\r\n            // firebase.auth().useEmulator('http://localhost:8084');\r\n            firebase.firestore().settings({\r\n                host: 'localhost:8085',\r\n                ssl: false,\r\n            });\r\n        }\r\n\r\n        //const analytics = firebase.analytics();\r\n    }\r\n\r\n    return firebase;\r\n}\r\n\r\nexport function generateFirestoreTimestamp(date: Date) {\r\n    const firebase = getFirebase();\r\n\r\n    return firebase.firestore.Timestamp.fromDate(date);\r\n}\r\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env && import.meta.env.MODE) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { navigate } from 'gatsby';\r\nimport { getFirebase } from '../lib/firebase';\r\nimport { User } from '../types/User';\r\nimport { User as FirebaseUser } from 'firebase/auth';\r\nimport { APP_ROUTES } from '../constants';\r\n\r\nconst USERS_DB = 'profiles';\r\n\r\nconst firebase = getFirebase();\r\nconst db = firebase.firestore();\r\n\r\nfirebase\r\n    .auth()\r\n    .setPersistence(\r\n        typeof window !== 'undefined'\r\n            ? firebase.auth.Auth.Persistence.LOCAL\r\n            : firebase.auth.Auth.Persistence.NONE\r\n    );\r\n\r\nlet userStateSubscription: null | (() => void) = null;\r\n\r\ntype CreateGoogleAccountConfig = {\r\n    extraData?: object;\r\n    redirectUrl?: string;\r\n};\r\n\r\nexport interface UserState {\r\n    user: User | null;\r\n    loading: boolean;\r\n    initUser: Promise<void>;\r\n    createUserWithEmailAndPassword: (\r\n        email: string,\r\n        password: string,\r\n        name: string,\r\n        extraData?: object\r\n    ) => Promise<void>;\r\n    logInWithEmailAndPassword: (email: string, password: string) => Promise<void>;\r\n    createGoogleAccount: (config?: CreateGoogleAccountConfig) => Promise<void>;\r\n    logOut: () => Promise<void>;\r\n    sendVerificationEmail: () => Promise<void>;\r\n    sendPasswordResetEmail: (email: string) => Promise<void>;\r\n    applyVerificationCode: (code: string) => Promise<void>;\r\n    applyPasswordResetCode: (code: string, newPassword: string) => Promise<void>;\r\n}\r\n\r\nexport const useUserStore = create<any>()(\r\n    subscribeWithSelector((set: any, get: any) => ({\r\n        user: null,\r\n        loading: true,\r\n        initUser: (async () => {\r\n            firebase.auth().onAuthStateChanged(async (user) => {\r\n                if (user) {\r\n                    const extraUserData = await db.collection(USERS_DB).doc(user.uid).get();\r\n                    console.log({ user: { ...user.toJSON(), ...extraUserData.data() } });\r\n                    set({ user: { ...user.toJSON(), ...extraUserData.data() }, loading: false });\r\n                } else {\r\n                    set({ user: null, loading: false });\r\n                }\r\n\r\n                if (!userStateSubscription) {\r\n                    userStateSubscription = useUserStore.subscribe(\r\n                        (state) => state.user,\r\n                        (user) => {\r\n                            if (user) {\r\n                                const urlsThatDontRedirect = ['/', APP_ROUTES.SIGNUP];\r\n                                if (!urlsThatDontRedirect.includes(window.location.pathname)) {\r\n                                    navigate(APP_ROUTES.DASHBOARD, { replace: true });\r\n                                }\r\n                            } else {\r\n                                navigate(APP_ROUTES.LOGIN, { replace: true });\r\n                            }\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        })(),\r\n        createUserWithEmailAndPassword: async (\r\n            email: string,\r\n            password: string,\r\n            name: string,\r\n            extraData?: object\r\n        ) => {\r\n            try {\r\n                await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n                const authUser = firebase.auth().currentUser;\r\n                await authUser?.updateProfile({ displayName: name });\r\n                if (authUser) {\r\n                    const user = (await db\r\n                        .collection(USERS_DB)\r\n                        .doc(authUser.uid)\r\n                        .set({\r\n                            ...extraData,\r\n                        })) as unknown as FirebaseUser;\r\n\r\n                    set({ user: { ...authUser.toJSON(), ...user } });\r\n                }\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n        },\r\n        logInWithEmailAndPassword: async (email: string, password: string) => {\r\n            try {\r\n                await firebase.auth().signInWithEmailAndPassword(email, password);\r\n                const authUser = firebase.auth().currentUser;\r\n                if (authUser) {\r\n                    const user = await db.collection(USERS_DB).doc(authUser.uid).get();\r\n\r\n                    set({ user: { ...authUser.toJSON(), ...user.data() } });\r\n                }\r\n            } catch (err) {\r\n                throw new Error('Email and password combination is incorrect');\r\n            }\r\n        },\r\n        createGoogleAccount: async (config: CreateGoogleAccountConfig = {}) => {\r\n            const { extraData = {}, redirectUrl } = config;\r\n\r\n            try {\r\n                const provider = new firebase.auth.GoogleAuthProvider();\r\n                await firebase.auth().signInWithPopup(provider);\r\n\r\n                const authUser = firebase.auth().currentUser;\r\n\r\n                if (authUser) {\r\n                    await db\r\n                        .collection(USERS_DB)\r\n                        .doc(authUser.uid)\r\n                        .set({\r\n                            ...extraData,\r\n                        });\r\n\r\n                    const user = await db.collection(USERS_DB).doc(authUser.uid).get();\r\n                    const fullUser = { ...authUser.toJSON(), ...user.data() };\r\n                    set({ user: fullUser });\r\n                    if (redirectUrl) {\r\n                        navigate(redirectUrl);\r\n                    }\r\n                }\r\n            } catch (err) {}\r\n        },\r\n        logOut: async () => {\r\n            return await firebase.auth().signOut();\r\n        },\r\n        sendVerificationEmail: async () => {\r\n            const user = firebase.auth().currentUser;\r\n            if (user && !user.emailVerified) {\r\n                await user.sendEmailVerification();\r\n            }\r\n        },\r\n        sendPasswordResetEmail: async (email: string) => {\r\n            await firebase.auth().sendPasswordResetEmail(email);\r\n        },\r\n        applyVerificationCode: async (code: string) => {\r\n            await firebase.auth().applyActionCode(code);\r\n            await firebase.auth().currentUser?.reload();\r\n            const authUser = firebase.auth().currentUser;\r\n            if (authUser) {\r\n                set({ user: { ...(get().user as object), ...authUser.toJSON() } });\r\n            }\r\n        },\r\n        applyPasswordResetCode: async (code: string, newPassword: string) => {\r\n            await firebase.auth().confirmPasswordReset(code, newPassword);\r\n        },\r\n    }))\r\n);\r\n","export default __webpack_public_path__ + \"static/logo-5b2ee818d26bb2471cb1f5a9a8640914.jpeg\";","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport { useDebugValue } from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nfunction useStore(api, selector = api.getState, equalityFn) {\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n"],"names":["API_URL","process","STORAGE_KEYS","YAHOO_KEY","YAHOO_URL","APP_ROUTES","LOGIN","SIGNUP","DASHBOARD","MERGE_LEAGUES","THANK_YOU","AUTH_CODES","FirebaseAppImpl","constructor","_delegate","firebase","this","_addComponent","container","automaticDataCollectionEnabled","val","name","options","delete","Promise","resolve","checkDestroyed","then","INTERNAL","removeApp","deleteApp","_getService","instanceIdentifier","_DEFAULT_ENTRY_NAME","_a","provider","getProvider","isInitialized","getComponent","instantiationMode","initialize","getImmediate","identifier","_removeServiceInstance","clearInstance","component","_addOrOverwriteComponent","toJSON","ERRORS","ERROR_FACTORY","firebase$1","createFirebaseNamespace","namespace","firebaseAppImpl","apps","__esModule","initializeApp","rawConfig","app","appCompat","registerVersion","setLogLevel","onLog","SDK_VERSION","registerComponent","componentName","componentNameWithoutCompat","replace","type","serviceNamespace","appArg","create","appName","undefined","serviceProps","prototype","args","bind","apply","multipleInstances","useAsService","modularAPIs","Object","defineProperty","get","keys","map","createFirebaseNamespaceCore","assign","extendNamespace","props","createSubscribe","ErrorFactory","deepExtend","logger","self","warn","sdkVersion","indexOf","variant","_cordovaWindow","window","async","_generateHandlerUrl","auth","event","BuildInfo","sessionId","sessionDigest","bytes","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","stringToArrayBuffer","buf","crypto","subtle","digest","Array","from","num","toString","padStart","join","computeSha256","additionalParams","packageName","displayName","eventId","SESSION_ID_LENGTH","CordovaAuthEventManager","super","arguments","passiveListeners","Set","initPromise","resolveInialized","addPassiveListener","cb","add","removePassiveListener","resetRedirect","queuedRedirectEvent","hasHandledPotentialRedirect","onEvent","forEach","_getAndRemoveEvent","storage","_get","persistenceKey","_remove","_eventFromPartialAndUrl","partialEvent","url","_b","callbackUrl","params","searchParamsOrEmpty","link","decodeURIComponent","doubleDeepLink","iOSDeepLink","_getDeepLinkFromCallback","includes","errorObject","json","JSON","parse","e","parseJsonOrNull","code","split","error","tenantId","urlResponse","postBody","generateSessionId","chars","allowedChars","idx","Math","floor","random","push","charAt","b","config","apiKey","_","rest","cordovaPopupRedirectResolver","_redirectPersistence","_shouldInitProactively","eventManagers","Map","originValidationPromises","_completeRedirectFn","_overrideRedirectResult","key","_key","manager","set","attachCallbackListeners","_openPopup","authType","_c","_d","_e","_f","_g","_h","_j","_k","win","universalLinks","subscribe","missingPlugin","cordova","plugins","browsertab","openUrl","isAvailable","InAppBrowser","open","_checkCordovaConfiguration","_initialize","initialized","_originValidation","_generateNewEvent","_set","_savePartialEvent","eventListener","iabRef","cleanup","reject","onCloseTimer","authEventSeen","closeBrowserTab","close","resumed","setTimeout","visibilityChanged","document","visibilityState","addEventListener","removeEventListener","clearTimeout","_waitForAppResume","handlerUrl","browserTabIsAvailable","_performRedirect","_isIframeWebStorageSupported","_auth","_cb","Error","request","iosBundleId","androidPackageName","_validateOrigin","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","finalEvent","existingHandleOpenURL","packagePrefix","toLowerCase","startsWith","console","_getCurrentScheme","location","protocol","_isAndroidOrIosCordovaScheme","ua","match","_isLocalStorageNotSynchronized","documentMode","_isEdge","_isWebStorageSupported","localStorage","_isWorker","g","_isPopupRedirectSupported","_isLikelyCordova","Persistence","LOCAL","NONE","SESSION","_assert$3","PERSISTENCE_KEY","_savePersistenceForRedirect","_initializationPromise","session","getSessionStorageIfAvailable","setItem","_getPersistence","sessionStorage","_assert$2","CompatPopupRedirectResolver","browserResolver","cordovaResolver","underlyingResolver","selectUnderlyingResolver","assertedUnderlyingResolver","_openRedirect","isCordova","timeoutId","_isCordova","unwrap","object","credentialFromObject","_tokenResponse","customData","providerId","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","signInMethod","idToken","accessToken","credential","rawNonce","credentialFromError","credentialFromResult","convertCredential","credentialPromise","catch","response","resolver","MultiFactorResolver","credErr","email","phoneNumber","attachExtraErrorFields","operationType","user","userCredential","additionalUserInfo","User","getOrCreate","convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","wrapped","hints","resolveSignIn","assertion","multiFactor","static","USER_MAP","has","reload","getIdTokenResult","forceRefresh","getIdToken","linkAndRetrieveDataWithCredential","linkWithCredential","applicationVerifier","reauthenticateAndRetrieveDataWithCredential","reauthenticateWithCredential","reauthenticateWithPhoneNumber","reauthenticateWithPopup","sendEmailVerification","actionCodeSettings","updateEmail","newEmail","updatePassword","newPassword","updatePhoneNumber","phoneCredential","updateProfile","profile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","photoURL","uid","WeakMap","_assert$1","Auth","linkUnderlyingAuth","persistence","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","useEmulator","applyActionCode","checkActionCode","confirmPasswordReset","password","fetchProvidersForEmail","fetchSignInMethodsForEmail","isSignInWithEmailLink","emailLink","addFrameworkForLogging","framework","_logFramework","onAuthStateChanged","nextOrObserver","errorFn","completed","next","complete","wrapObservers","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","converted","values","_validatePersistenceArgument","_isAvailable","setPersistence","signInAndRetrieveDataWithCredential","signInWithCredential","signInAnonymously","signInWithCustomToken","token","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","updateCurrentUser","verifyPasswordResetCode","_delete","oldNext","persistences","getItem","_getPersistencesFromRedirect","PhoneAuthProvider","verifyPhoneNumber","phoneInfoOptions","PHONE_SIGN_IN_METHOD","PROVIDER_ID","_assert","RecaptchaVerifier","parameters","clear","render","verify","instance","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","FacebookAuthProvider","GithubAuthProvider","GoogleAuthProvider","OAuthProvider","SAMLAuthProvider","PhoneMultiFactorGenerator","TwitterAuthProvider","AuthCredential","setInstantiationMode","setMultipleInstances","validateSetOptions","methodName","merge","mergeFields","assertUint8ArrayAvailable","assertBase64Available","Blob","base64","array","toBase64","toUint8Array","isEqual","other","isPartialObserver","obj","methods","method","implementsAnyMethods","IndexedDbPersistenceProvider","enableIndexedDbPersistence","firestore","forceOwnership","enableMultiTabIndexedDbPersistence","clearIndexedDbPersistence","Firestore","databaseIdOrApp","_persistenceProvider","terminate","_appCompat","_databaseId","settingsLiteral","currentSettings","_getSettings","host","_setSettings","port","enableNetwork","disableNetwork","enablePersistence","synchronizeTabs","experimentalForceOwningTab","clearPersistence","waitForPendingWrites","onSnapshotsInSync","arg","collection","pathString","CollectionReference","replaceFunctionName","doc","DocumentReference","collectionGroup","collectionId","Query","runTransaction","updateFunction","transaction","Transaction","batch","WriteBatch","mutations","loadBundle","bundleData","namedQuery","expQuery","UserDataWriter","convertBytes","convertReference","convertDocumentKey","forKey","_firestore","_userDataWriter","documentRef","ref","castReference","result","DocumentSnapshot","_document","converter","data","update","dataOrField","value","moreFieldsAndValues","commit","FirestoreDataConverter","fromFirestore","snapshot","expSnapshot","QueryDocumentSnapshot","toFirestore","modelObject","converterMapByFirestore","INSTANCES","untypedConverterByConverter","path","canonicalString","id","parent","fieldOrUpdateData","onSnapshot","extractSnapshotOptions","observer","wrapObserver","snap","source","withConverter","getInstance","original","updated","message","wrapper","userObserver","exists","fieldPath","where","opStr","orderBy","directionStr","limit","n","limitToLast","startAt","startAfter","endBefore","endAt","query","QuerySnapshot","_snapshot","DocumentChange","oldIndex","newIndex","size","empty","docs","docChanges","docChange","callback","thisArg","call","docRef","documentPath","FieldPath","fieldNames","_internalPath","FieldValue","delegate","_methodName","elements","firestoreNamespace","GeoPoint","Timestamp","level","CACHE_SIZE_UNLIMITED","getFirebase","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestoreFactory","firestoreExp","configureForFirebase","registerFirestore","subscribeWithSelector","fn","api","origSubscribe","selector","optListener","listener","equalityFn","is","currentSlice","getState","state","nextSlice","previousSlice","fireImmediately","USERS_DB","db","userStateSubscription","useUserStore","loading","initUser","extraUserData","log","pathname","navigate","createUserWithEmailAndPassword","extraData","authUser","err","logInWithEmailAndPassword","createGoogleAccount","redirectUrl","signInWithPopup","fullUser","logOut","sendVerificationEmail","applyVerificationCode","_firebase$auth$curren","applyPasswordResetCode","k","a","l","useState","m","useEffect","useLayoutEffect","p","useDebugValue","r","getSnapshot","d","f","u","createElement","inst","c","exports","useSyncExternalStore","h","q","t","useRef","v","useMemo","w","useSyncExternalStoreWithSelector","current","hasValue","module","createStoreImpl","createState","listeners","setState","partial","nextState","previousState","destroy","createStore","createImpl","useBoundStore","slice","getServerState","useStore"],"sourceRoot":""}