{"version":3,"sources":["webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./src/pages/standings.js","webpack:///./node_modules/lodash/filter.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_baseFilter.js"],"names":["baseFor","keys","module","exports","object","iteratee","baseForOwn","baseEach","createBaseEach","createBaseFor","IndexPage","props","yearChangeHandler","event","selected","target","value","setState","YearSelected","loadYearData","year","state","includeRegularSeason","refs","regular_season","checked","includePlayoffs","playoffs","allYearsObject","gamesByYear","yearObject","find","obj","gameWeeks","forEach","element","weeks","push","allGamesYear","gamesByOwner","statsByTeam","reverse","i","length","week","games","game","id","team_a","ownerId","name","owner","team_b","team","wins","loses","ties","points","pointsAgaisnt","parseFloat","score","winner","winRate","owners","data","allDataJson","edges","node","fantasyname","toFixed","pointsAgainst","sort","a","b","Date","index","rank","regularSeasonClickHandler","bind","yearLabels","UNSAFE_componentWillMount","years","this","weeks_games","playOffWeeks","currentYear","isPlayoff","playoffTierType","check","componentDidMount","render","className","title","type","ref","onChange","defaultChecked","change","options","defaultSortName","defaultSortOrder","bordered","trClassName","version","dataField","isKey","dataSort","width","React","Component","arrayFilter","baseFilter","baseIteratee","isArray","collection","predicate","isArrayLike","eachFunc","fromRight","iterable","Object","keysFunc","key","result"],"mappings":"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","file":"component---src-pages-standings-js-076485bebbcc03b2dbe3.js","sourcesContent":["var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\";\r\nimport Breadcrumb from '../components/breadcrumb';\r\nimport '../components/standings/_standings.scss';\r\nimport YearSelect from '../components/year-selector';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\n\r\n\r\nclass IndexPage extends React.Component {\r\n\tconstructor(props) {\r\n\t\t\t\t\t\tsuper(props);\r\n\t\t\t\t\t\tthis.yearChangeHandler = this.yearChangeHandler.bind(this);\r\n\t\t\t\t\t\tthis.loadYearData = this.loadYearData.bind(this);\r\n\t        \tthis.state = {\r\n\t\t\t\t\t\t\t\tyearLabels: [],\r\n\t\t\t\t\t\t\t\tYearSelected: \"\",\r\n\t\t\t\t\t\t\t\tgamesByYear: [],\r\n\t\t\t\t\t\t\t\tstatsByTeam: []\r\n\r\n\t\t        }\r\n\t        }\r\n\t\t\t\t\t\r\n\t\tyearChangeHandler = (event) => {\r\n\t\t\tvar selected = event.target.value;\r\n\t\t\tthis.setState(\r\n\t\t\t\t{ YearSelected: selected },\r\n\t\t\t\t() => this.loadYearData()\r\n\t\t\t)\r\n\t\t}\r\n\t\r\n\t\tloadYearData = () => {\r\n\t\t\t\r\n\t\t\t\tvar year = this.state.YearSelected;\r\n\t\t\t\tvar includeRegularSeason = this.refs.regular_season.checked;\r\n\t\t\t\tvar includePlayoffs = this.refs.playoffs.checked;\r\n\r\n\t\t\t\tvar allYearsObject = this.state.gamesByYear;\r\n\t\t\t\tvar yearObject = this.state.gamesByYear.find(obj => obj.year === year);\r\n\t\t\t\tvar gameWeeks = [];\r\n\t\t\t\tif (year === 'All') {\r\n\t\t\t\t\tallYearsObject.forEach(function (element) {\r\n\t\t\t\t\t\tlet weeks = element.weeks;\r\n\t\t\t\t\t\t// Just regular season\r\n\t\t\t\t\t\tif (!includePlayoffs && includeRegularSeason) { \r\n\t\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': false });\r\n\t\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//Just playoffs \r\n\t\t\t\t\t\telse if (includePlayoffs && !includeRegularSeason) {\r\n\t\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': true });\r\n\t\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// All\r\n\t\t\t\t\t\telse if (includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t\t}\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet weeks = yearObject.weeks;\r\n\t\t\t\t\t// Just regular season\r\n\t\t\t\t\tif (!includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': false });\r\n\t\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Just playoffs \r\n\t\t\t\t\telse if (includePlayoffs && !includeRegularSeason) {\r\n\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': true });\r\n\t\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// All\r\n\t\t\t\t\telse if (includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar allGamesYear = [];\r\n\t\t\t\tvar gamesByOwner = [];\r\n\t\t\t\tvar statsByTeam = [];\r\n\t\t\t\tvar teamObject = [];\r\n\r\n\t\t\t\tgameWeeks.reverse();\r\n\r\n\t\t\t\t//get all games from weeks\r\n\t\t\t\tif (year === 'All') {\r\n\t\t\t\t\tfor (let i = 0; i < gameWeeks.length; i++) {\r\n\t\t\t\t\t\tgameWeeks[i].forEach((week) => {\r\n\t\t\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\t\t\tallGamesYear.push(game);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgameWeeks.forEach((week) => {\r\n\t\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\t\tallGamesYear.push(game);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n  \r\n\t\t\t\t//get games by owner\r\n\r\n        allGamesYear.forEach((game) => {\r\n          if (gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId)) {\r\n              teamObject = gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId);\r\n              teamObject.games.push(game);\r\n          } else {\r\n            gamesByOwner.push({\r\n              id: game.team_a[\"0\"].ownerId,\r\n              name: game.team_a[\"0\"].owner,\r\n              games: [game]\r\n            })\r\n          }\r\n          if (gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId)) {\r\n              teamObject = gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId);\r\n              teamObject.games.push(game);\r\n          } else {\r\n            gamesByOwner.push({\r\n              id: game.team_b[\"0\"].ownerId,\r\n              name: game.team_b[\"0\"].owner,\r\n              games: [game]\r\n            })\r\n          }\r\n        })\r\n\r\n\t\t\t\t// process stats per team \r\n\r\n\t\t\t\tgamesByOwner.forEach((team) => {\r\n\t\t\t\t\tvar wins = 0,\r\n\t\t\t\t\t\tloses = 0,\r\n\t\t\t\t\t\tties = 0,\r\n\t\t\t\t\t\tpoints = 0,\r\n\t\t\t\t\t\tpointsAgaisnt = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tteam.games.forEach((game) => {\r\n\t\t\t\t\t\tif(year === \"All\") {\r\n\t\t\t\t\t\t\tif(game.team_a[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t} else if (game.team_b[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t(game.winner === 'HOME' && game.team_a['0'].ownerId === team.id) ||\r\n\t\t\t\t\t\t\t\t(game.winner === 'AWAY' && game.team_b['0'].ownerId === team.id)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\twins++\r\n\t\t\t\t\t\t\t} else if (parseFloat(game.team_b[0].score) === parseFloat(game.team_a[0].score)) {\r\n\t\t\t\t\t\t\t\tties++\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tloses++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (game.team_a[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t} else if (game.team_b[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t(game.winner === 'HOME' && game.team_a['0'].ownerId === team.id) ||\r\n\t\t\t\t\t\t\t\t(game.winner === 'AWAY' && game.team_b['0'].ownerId === team.id)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\twins++\r\n\t\t\t\t\t\t\t} else if (parseFloat(game.team_b[0].score) === parseFloat(game.team_a[0].score)) {\r\n\t\t\t\t\t\t\t\tties++\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tloses++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tvar winRate = parseFloat(wins + (ties * .5))/team.games.length;\r\n\r\n\t\t\t\t\t// Get Owner name from Owners \r\n\t\t\t\t\t\r\n\t\t\t\t\tconst owners = this.props.data.allDataJson.edges[0].node.owners;\r\n\t\t\t\t\tconst owner = _.find(owners, ['id', team.id]);\r\n\t\t\t\t\tstatsByTeam.push({\r\n\t\t\t\t\t\tteam: owner.fantasyname !== '' ? owner.name + \" (\" + owner.fantasyname + \")\" : owner.name ,\r\n\t\t\t\t\t\twins: wins,\r\n\t\t\t\t\t\tloses: loses,\r\n\t\t\t\t\t\tties: ties,\r\n\t\t\t\t\t\tpoints: parseFloat(points.toFixed(2)),\r\n\t\t\t\t\t\tpointsAgainst: parseFloat(pointsAgaisnt.toFixed(2)),\r\n\t\t\t\t\t\twinRate: winRate.toFixed(3)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t\t\tstatsByTeam.sort(function(a, b) {\r\n\t\t\t\t\ta = new Date(a.wins);\r\n\t\t\t\t\tb = new Date(b.wins);\r\n\t\t\t\t\treturn a>b ? -1 : a<b ? 1 : 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tstatsByTeam.forEach((team, index) => {\r\n\t\t\t\t\tteam.rank = index + 1;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.setState(\r\n\t\t\t\t\t{ statsByTeam: statsByTeam }\r\n\t\t\t\t)\r\n\t\t}\r\n\t\r\n\t\tUNSAFE_componentWillMount() {\r\n\t\t\tconst years = this.props.data.allDataJson.edges[0].node.years;\r\n\t\t\tvar games = [];\r\n\r\n\t\t\tyears.forEach((year) => {\r\n\t\t\t\tyear.weeks_games.forEach((week) => {\r\n\t\t\t\t\tgames.push(...week.games);\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tvar playOffWeeks = [];\r\n\t\t\tvar gamesByYear = [];\r\n\t\t\tvar yearLabels = [];\r\n\t\t\t\r\n\t\t\t// get games by years and weeks\r\n\r\n\t\t\tgames.forEach((game) => {\r\n\t\t\t\t// If year repeats itself\r\n\t\t\t\tif(gamesByYear.find(obj => obj.year === game.year)) { \r\n\t\t\t\t\tvar currentYear = gamesByYear.find(obj => obj.year === game.year)\r\n\t\t\t\t\t\tif (currentYear.weeks.find(obj => obj.week === game.week)) {\r\n\t\t\t\t\t\t\tvar currentWeek = currentYear.weeks.find(obj => obj.week === game.week)\r\n\t\t\t\t\t\t\tcurrentWeek.games.push(game);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcurrentYear.weeks.push({\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t} else { // Initial year \r\n\t\t\t\t\tgamesByYear.push({\r\n\t\t\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\t\t\tweeks: [{\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tyearLabels.push(game.year);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// mark the playoff weeks and populate array\r\n\t\t\tgamesByYear.forEach((year) => {\r\n\t\t\t\tyear.weeks.forEach((week) => {\r\n\t\t\t\t\tweek.isPlayoff = false;\r\n\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\tif (game.playoffTierType !== 'NONE') {\r\n\t\t\t\t\t\t\tweek.isPlayoff = true;\r\n\t\t\t\t\t\t\tweek.games = _.filter(week.games, function (check) {\r\n\t\t\t\t\t\t\t\treturn check.playoffTierType !== \"NONE\";\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (week.isPlayoff === true) {\r\n\t\t\t\t\t\tplayOffWeeks.push(week);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tyearLabels.reverse();\r\n\r\n\t\t\tthis.setState({yearLabels:yearLabels });\r\n\t\t\tthis.setState({gamesByYear:gamesByYear})\r\n\t\t\tthis.setState({YearSelected: 'All' })\r\n\t\t\t \r\n  \t}        \r\n  \t\r\n  componentDidMount() {\r\n\t\tthis.loadYearData();\r\n\t}\r\n\t\t\r\n\tregularSeasonClickHandler = event => {\r\n\t\tthis.loadYearData();\r\n\t}\r\n\r\n\t\r\n\t\t\r\n  \trender() {\r\n\t\tconst options = {\r\n\t\t\tdefaultSortName: 'rank',\r\n\t\t\tdefaultSortOrder: 'asc'\r\n\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t return (\r\n\t\t\t <Layout >\r\n\t\t\t\t<main className=\"container-fluid standings\">\r\n\t\t\t\t\t<Breadcrumb title=\"Standings\"/>\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\"> \r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"regular-season\" ref=\"regular_season\" value=\"regular-season\" onChange={this.regularSeasonClickHandler} defaultChecked={true} /> <span className=\"checkbox-label\">Regular Season</span>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"playoffs\" ref=\"playoffs\" value=\"playoffs\" onChange={this.regularSeasonClickHandler} /> <span className=\"checkbox-label\">Playoffs</span>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<YearSelect data={this.state.yearLabels} change={(event) => this.yearChangeHandler(event)}/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t<BootstrapTable data={this.state.statsByTeam} options={ options } bordered={ false } trClassName=\"alt\" version='4'>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='rank' isKey={true} dataSort={true} className=\"heading--gray\" width=\"10%\">Rank</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='team' dataSort={ true } className=\"heading--gray\">Team</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='wins' dataSort={true}  className=\"heading--gray\" width=\"10%\">W</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='loses' dataSort={true} className=\"heading--gray\" width=\"10%\">L</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='ties' dataSort={true} className=\"heading--gray\" width=\"10%\">T</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='winRate' dataSort={true} className=\"heading--gray\" width=\"10%\">PCT</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='points' dataSort={true} className=\"heading--gray\" width=\"10%\">PF</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='pointsAgainst' dataSort={ true } className=\"heading--gray\" width=\"10%\">PA</TableHeaderColumn>\r\n\t\t\t\t\t\t\t</BootstrapTable>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer small text-muted\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t </Layout>\r\n\t\t\t );\r\n\t}\r\n}\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query standingsQuery {\r\n\t\tallDataJson {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\towners {\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t\tfantasyname\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\timage\r\n\t\t\t\t\t\tstatus\r\n\t\t\t\t\t}\r\n\t\t\t\t\tyears{\r\n\t\t\t\t\t\tweeks_games {\r\n\t\t\t\t\t\t\tgames {\r\n\t\t\t\t\t\t\t\tweek\r\n\t\t\t\t\t\t\t\tplayoffTierType\r\n\t\t\t\t\t\t\t\twinner\r\n\t\t\t\t\t\t\t\tteam_a {\r\n\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\towner\r\n\t\t\t\t\t\t\t\t\townerId\r\n\t\t\t\t\t\t\t\t\tlogo\r\n\t\t\t\t\t\t\t\t\tscore\r\n\t\t\t\t\t\t\t\t\trank\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tteam_b {\r\n\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\towner\r\n\t\t\t\t\t\t\t\t\townerId\r\n\t\t\t\t\t\t\t\t\tlogo\r\n\t\t\t\t\t\t\t\t\tscore\r\n\t\t\t\t\t\t\t\t\trank\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tyear\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n}\r\n`;\r\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n"],"sourceRoot":""}