{"version":3,"sources":["webpack:///./node_modules/lodash/_baseSortBy.js","webpack:///./src/helpers/game.js","webpack:///./node_modules/lodash/_shortOut.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/_baseRest.js","webpack:///./node_modules/lodash/takeRight.js","webpack:///./node_modules/lodash/_compareMultiple.js","webpack:///./node_modules/lodash/_overRest.js","webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/_baseSlice.js","webpack:///./node_modules/lodash/_defineProperty.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/take.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/_baseOrderBy.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_apply.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/orderBy.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_isIterateeCall.js","webpack:///./node_modules/lodash/_baseSetToString.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/_setToString.js","webpack:///./node_modules/lodash/sortBy.js","webpack:///./node_modules/lodash/_compareAscending.js"],"names":["module","exports","array","comparer","length","sort","value","_","require","gamesByOwnerFunc","games","gamesByOwners","forEach","game","teamA","team_a","teamB","team_b","find","obj","id","ownerId","push","name","owner","scoresOwners","score","week","year","seasonOutcome","includePlayoffs","wins","loses","ties","scoreFor","scoreAgaisnt","gamelog","filteredGames","filter","playoffTierType","index","teamAScore","parseFloat","teamBScore","console","log","result","counter","i","type","start","end","streak","cntConsecutiveElements","pct","toFixed","avgPoints","avgPointsAgaisnt","gameOutcomeWinner","owners","winner","winnerId","loser","loserId","scoreWin","scoreLose","margin","sumScore","nativeNow","Date","now","func","count","lastCalled","stamp","remaining","arguments","apply","undefined","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","identity","overRest","setToString","baseSlice","toInteger","n","guard","compareAscending","object","other","orders","objCriteria","criteria","othCriteria","ordersLength","nativeMax","Math","max","transform","args","Array","otherArgs","this","createFind","baseFor","keys","iteratee","predicate","fromIndex","fromRight","getNative","defineProperty","Object","e","baseForOwn","baseEach","createBaseEach","toFinite","remainder","reWhitespace","string","test","charAt","baseFindIndex","baseIteratee","arrayPush","isFlattenable","baseFlatten","depth","isStrict","isArrayLike","findIndexFunc","collection","iterable","key","toNumber","arrayMap","baseGet","baseMap","baseSortBy","baseUnary","compareMultiple","iteratees","createBaseFor","thisArg","call","trimmedEndIndex","reTrimStart","slice","replace","baseOrderBy","eachFunc","keysFunc","props","eq","isIndex","isObject","constant","baseSetToString","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","isBinary","shortOut","baseRest","isIterateeCall","sortBy","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol"],"mappings":"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","file":"ae16668d135aeb811e8e1dd06c885dcc9d40dfcf-0bc6080165672e627799.js","sourcesContent":["/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nmodule.exports = baseSortBy;\n","\r\nconst _ = require('lodash');\r\n\r\nexport function gamesByOwnerFunc (games) {\r\n  //get games by owner\r\n  const gamesByOwners = [];\r\n  games.forEach((game) => {\r\n    const teamA = game?.team_a[0];\r\n    const teamB = game?.team_b[0];\r\n    let teamObject = [];\r\n    if (gamesByOwners.find(obj => obj.id === teamA?.ownerId)) {\r\n        teamObject = gamesByOwners.find(obj => obj.id === teamA?.ownerId);\r\n        teamObject.games.push(game);\r\n    } else {\r\n      gamesByOwners.push({\r\n        id: teamA?.ownerId,\r\n        name: teamA?.owner,\r\n        games: [game]\r\n      })\r\n    }\r\n    if (gamesByOwners.find(obj => obj.id === teamB?.ownerId)) {\r\n        teamObject = gamesByOwners.find(obj => obj.id === teamB?.ownerId);\r\n        teamObject.games.push(game);\r\n    } else {\r\n      gamesByOwners.push({\r\n        id: teamB?.ownerId,\r\n        name: teamB?.owner,\r\n        games: [game]\r\n      })\r\n    }\r\n  });\r\n\r\n  return gamesByOwners;\r\n}\r\n\r\nexport function scoresOwners(games) {\r\n  const scoresOwners = [];\r\n  games.forEach((game) => {\r\n    const teamA = game?.team_a[0];\r\n    const teamB = game?.team_b[0];\r\n    scoresOwners.push({\r\n      name: teamA.name,\r\n      score: teamA.score,\r\n      id: teamA.ownerId,\r\n      week: game.week,\r\n      year: game.year\r\n    });\r\n    scoresOwners.push({\r\n      name: teamB.name,\r\n      score: teamB.score,\r\n      id: teamB.ownerId,\r\n      week: game.week,\r\n      year: game.year\r\n    });\r\n  });\r\n\r\n  return scoresOwners;\r\n\r\n}\r\n\r\n\r\nfunction cntConsecutiveElements(array) {\r\n  let result = []\r\n  let counter = 1;\r\n  for (let i = 0; i < array.length; i++) {\r\n\r\n    if (array[i] === array[i + 1]) {\r\n      counter++;\r\n    } else {\r\n      result.push({\r\n        i,\r\n        type: array[i],\r\n        start: i+2-counter,\r\n        end: i+1,\r\n        streak: counter\r\n      });\r\n      counter = 1;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function seasonOutcome(games,id,year,includePlayoffs) {\r\n \r\n  let wins = 0;\r\n  let loses = 0;\r\n  let ties = 0;\r\n  let scoreFor = 0;\r\n  let scoreAgaisnt = 0;\r\n  let gamelog = [];\r\n  let filteredGames = games;\r\n\r\n  if (!includePlayoffs) {\r\n    filteredGames = games.filter(function (game) {\r\n      return game.playoffTierType === \"NONE\";\r\n    });  \r\n  }\r\n\r\n  filteredGames.forEach((game,index) => {\r\n    const teamA = game?.team_a[0];\r\n    const teamB = game?.team_b[0];\r\n    const teamAScore = parseFloat(teamA.score);\r\n    const teamBScore = parseFloat(teamB.score);\r\n    if  (teamBScore === teamAScore) {\r\n      ties++\r\n      gamelog.push('T');\r\n    }\r\n    if (id === teamA.ownerId) {\r\n      if (teamAScore > teamBScore) {\r\n        wins++;\r\n        gamelog.push('W');\r\n      }\r\n      else if (teamBScore > teamAScore) {\r\n        loses++;\r\n        gamelog.push('L');\r\n      }\r\n      scoreFor += teamAScore;\r\n      scoreAgaisnt += teamBScore;\r\n    }\r\n    else if (id === teamB.ownerId) {\r\n      if (teamAScore > teamBScore) {\r\n        loses++;\r\n        gamelog.push('L');\r\n      }\r\n      else if (teamBScore > teamAScore) {\r\n        wins++;\r\n        gamelog.push('W');\r\n      }\r\n      scoreFor += teamBScore;\r\n      scoreAgaisnt += teamAScore;\r\n    }\r\n\r\n  });\r\n\r\n  console.log(cntConsecutiveElements(gamelog),\"consecutives\");\r\n\r\n  return {\r\n    id,\r\n    year,\r\n    wins,\r\n    loses,\r\n    gamelog,\r\n    pct:  parseFloat(((wins + (ties * .5))/filteredGames.length).toFixed(3)),\r\n    avgPoints: parseFloat((scoreFor/filteredGames.length).toFixed(2)),\r\n    avgPointsAgaisnt: parseFloat((scoreAgaisnt/filteredGames.length).toFixed(2)),\r\n    scoreFor: parseFloat(scoreFor.toFixed(2)),\r\n    scoreAgaisnt: parseFloat(scoreAgaisnt.toFixed(2)),\r\n  }\r\n\r\n}\r\n\r\nexport function gameOutcomeWinner(game,owners) {\r\n\r\n  let winner, winnerId, loser, loserId, scoreWin, scoreLose;\r\n  winner = winnerId = loser = loserId = '';\r\n  scoreWin = scoreLose = 0;\r\n  const teamA = game?.team_a[0];\r\n  const teamB = game?.team_b[0];\r\n  const teamAScore = parseFloat(teamA.score);\r\n  const teamBScore = parseFloat(teamB.score);\r\n\r\n  if (teamAScore > teamBScore) {\r\n    winnerId = teamA.ownerId;\r\n    scoreWin = teamA.score;\r\n    loserId = teamB.ownerId;\r\n    scoreLose = teamB.score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n  else if (teamBScore > teamAScore) {\r\n    winnerId = teamB.ownerId;\r\n    scoreWin = teamB.score;\r\n    loserId = teamA.ownerId;\r\n    scoreLose = teamA.score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n\r\n  if (winner !== '') {\r\n    return {\r\n      winner: winner,\r\n      loser: loser,\r\n      winnerId: winnerId,\r\n      loserId: loserId,\r\n      scoreWin: scoreWin,\r\n      scoreLose: scoreLose,\r\n      week: game.week,\r\n      year: game.year,\r\n      margin: parseFloat((scoreWin - scoreLose).toFixed(2)),\r\n      sumScore: parseFloat((scoreWin + scoreLose).toFixed(2))\r\n    };\r\n  }\r\n}\r\n\r\nexport function minus(a, b) {\r\n  return a - b;\r\n}\r\n\r\nexport function multiply(a, b) {\r\n  return a * b;\r\n}\r\n\r\nexport function divide(a, b) {\r\n  return a / b;\r\n}\r\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.takeRight([1, 2, 3]);\n * // => [3]\n *\n * _.takeRight([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.takeRight([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.takeRight([1, 2, 3], 0);\n * // => []\n */\nfunction takeRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nmodule.exports = takeRight;\n","var compareAscending = require('./_compareAscending');\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var baseSlice = require('./_baseSlice'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nmodule.exports = take;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var arrayMap = require('./_arrayMap'),\n    baseGet = require('./_baseGet'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var baseOrderBy = require('./_baseOrderBy'),\n    isArray = require('./isArray');\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nmodule.exports = orderBy;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nmodule.exports = sortBy;\n","var isSymbol = require('./isSymbol');\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nmodule.exports = compareAscending;\n"],"sourceRoot":""}