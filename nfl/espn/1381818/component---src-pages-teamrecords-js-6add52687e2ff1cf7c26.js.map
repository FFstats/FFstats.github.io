{"version":3,"sources":["webpack:///./src/components/GameRecord/index.js","webpack:///./src/helpers/game.js","webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./src/pages/teamrecords.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./src/components/MatchupRecord/index.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/compact.js","webpack:///./src/components/year-selector/index.js"],"names":["GameRecord","props","className","title","label","data","map","item","i","Fragment","key","alt","src","image","onError","ev","target","name","year","week","score","_","require","gameOutcome","game","owners","winner","winnerId","loser","loserId","scoreWin","scoreLose","parseFloat","team_a","team_b","ownerId","find","margin","toFixed","sumScore","createFind","module","exports","array","predicate","fromIndex","fromRight","length","index","TeamRecords","query","games","allGamesJson","nodes","allOwnersJson","yearLabels","useState","Set","reverse","setYear","playoff","setPlayoff","regular","setRegular","topScores","bottomScores","topVictoryMargin","bottomVictoryMargin","gameStats","allScores","filteredGames","useEffect","filter","playoffTierType","parseInt","forEach","push","teamA","teamB","id","type","value","onChange","e","checked","change","toFinite","result","remainder","reWhitespace","string","test","charAt","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","isArrayLike","keys","findIndexFunc","collection","iterable","Object","iteratee","undefined","toNumber","MatchupRecord","show","trimmedEndIndex","reTrimStart","slice","replace","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","other","valueOf","isBinary","resIndex","YearSelect"],"mappings":"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","file":"component---src-pages-teamrecords-js-6add52687e2ff1cf7c26.js","sourcesContent":["import React from 'react';\r\n\r\nimport './_game-record.scss';\r\n\r\n\r\nconst GameRecord = (props) =>\r\n  (<div className=\"col-lg-6 records\">\r\n    <div className=\"row mx-lg-2 mb-5 mb-lg-2 clippedbox--color-dark text-center\">\r\n      <h2 className=\"heading--gray my-4 col-12\">{props.title}</h2>\r\n      <div className=\"col-6 px-0 mb-1\">\r\n        <p className=\"heading--gray\">Team</p>\r\n      </div>\r\n      <div className=\"col-2 px-0\">\r\n        <p className=\"heading--gray\">Year</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">Week</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">{props.label}</p>\r\n      </div>\r\n        {props.data.map((item, i) =>(\r\n          <React.Fragment key={i}>\r\n            <div className=\"col-12 alt\">\r\n              <div className=\"row flex-center\">\r\n            <div className=\"col-6 flex-center pr-0\">\r\n              <p  className=\"rank-number\">{i + 1}</p>\r\n                  <img alt=\"team-logo\" src={item.image} className=\"image\" onError={function (ev) { \r\n                    ev.target.src = \"https://fantasy-franchise.com/img/DEF.png\";\r\n                    }} />\r\n              <p>{item.name}</p>\r\n            </div>\r\n            <div className=\"col-2 text-center\">\r\n              <p>{item.year}</p>\r\n            </div>\r\n            <div className=\"col-2 text-center\">\r\n              <p>{item.week}</p>\r\n            </div>\r\n            <div className= \"col-2 text-center\">\r\n              <p>{item.score}</p>\r\n            </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>);\r\n\r\nexport default GameRecord;\r\n","\r\nconst _ = require('lodash');\r\n\r\nexport function gameOutcome(game,owners) {\r\n\r\n  let winner, winnerId, loser, loserId, scoreWin, scoreLose;\r\n  winner = winnerId = loser = loserId = '';\r\n  scoreWin = scoreLose = 0;\r\n  if (parseFloat(game.team_a[\"0\"].score) > parseFloat(game.team_b[\"0\"].score)) {\r\n    winnerId = game.team_a[\"0\"].ownerId;\r\n    scoreWin = game.team_a[\"0\"].score;\r\n    loserId = game.team_b[\"0\"].ownerId;\r\n    scoreLose = game.team_b[\"0\"].score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n  else if (parseFloat(game.team_b[\"0\"].score) > parseFloat(game.team_a[\"0\"].score)) {\r\n    winnerId = game.team_b[\"0\"].ownerId;\r\n    scoreWin = game.team_b[\"0\"].score;\r\n    loserId = game.team_a[\"0\"].ownerId;\r\n    scoreLose = game.team_a[\"0\"].score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n\r\n  if (winner !== '') {\r\n    return {\r\n      winner: winner,\r\n      loser: loser,\r\n      winnerId: winnerId,\r\n      loserId: loserId,\r\n      scoreWin: scoreWin,\r\n      scoreLose: scoreLose,\r\n      week: game.week,\r\n      year: game.year,\r\n      margin: parseFloat((scoreWin - scoreLose).toFixed(2)),\r\n      sumScore: parseFloat((scoreWin + scoreLose).toFixed(2))\r\n    };\r\n  }\r\n}\r\n\r\nexport function minus(a, b) {\r\n  return a - b;\r\n}\r\n\r\nexport function multiply(a, b) {\r\n  return a * b;\r\n}\r\n\r\nexport function divide(a, b) {\r\n  return a / b;\r\n}","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","import _ from 'lodash';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\";\r\nimport Breadcrumb from '../components/breadcrumb';\r\nimport YearSelect from '../components/year-selector';\r\nimport GameRecord from '../components/GameRecord';\r\nimport MatchupRecord from '../components/MatchupRecord';\r\nimport { gameOutcome } from '../helpers/game';\r\n\r\nconst TeamRecords = (query) => {\r\n\t\t// Get GraphlQL data\r\n\t\tconst games = query.data.allGamesJson.nodes;\r\n\t\tconst owners = query.data.allOwnersJson.nodes;\r\n\r\n\t\tconst [yearLabels] = useState([...new Set(games.map(item => item.year))].reverse());\r\n\t\tconst [year, setYear] = useState(\"All\");\r\n\t\tconst [playoff, setPlayoff] = useState(false);\r\n\t\tconst [regular, setRegular] = useState(true);\r\n\t\tconst [topScores, setTopScores] = useState([]);\r\n\t\tconst [bottomScores, setBottomScores] = useState([]);\r\n\t\tconst [topVictoryMargin, setTopVictoryMargin] = useState([]);\r\n\t\tconst [bottomVictoryMargin, setBottomVictoryMargin] = useState([]);\r\n\r\n\t\tlet gameStats = [];\r\n\t\tlet allScores = [];\r\n\t\tlet filteredGames = games;\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\r\n\t\t\tif (!playoff) {\r\n\t\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\t\treturn game.playoffTierType !== \"WINNERS_BRACKET\";\r\n\t\t\t\t});            \r\n\t\t\t}  \r\n\t\t\t\r\n\t\t\tif (!regular) {\r\n\t\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\t\treturn game.playoffTierType !== \"NONE\";\r\n\t\t\t\t});            \r\n\t\t\t} \r\n\t\r\n\t\t\tif (year !== 'All') {\r\n\t\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\t\treturn game.year === parseInt(year);\r\n\t\t\t\t});  \r\n\t\t\t}\r\n\t\r\n\t\t\tfilteredGames.forEach((game) => {\r\n\t\t\t\tgameStats.push(gameOutcome(game,owners));\r\n\t\t\t});\r\n\t\r\n\t\t\t// Get all scores in separate objects so we can find the max and min easily\r\n\t\t\tfilteredGames.forEach(game=> {\r\n\t\t\t\tconst teamA = game.team_a[\"0\"];\r\n\t\t\t\tconst teamB = game.team_b[\"0\"];\r\n\t\r\n\t\t\t\tallScores.push({\r\n\t\t\t\t\tid: teamA.ownerId,\r\n\t\t\t\t\tname: _.find(owners, ['id', teamA.ownerId]).name,\r\n\t\t\t\t\tscore: teamA.score,\r\n\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\timage: _.find(owners, ['id', teamA.ownerId]).image\r\n\t\t\t\t});\r\n\t\t\t\tallScores.push({\r\n\t\t\t\t\tid: teamB.ownerId,\r\n\t\t\t\t\tname: _.find(owners, ['id', teamB.ownerId ]).name,\r\n\t\t\t\t\tscore: teamB.score,\r\n\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\timage: _.find(owners, ['id', teamB.ownerId]).image\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\r\n\t\t\t// Remove empty sets\r\n\t\t\tgameStats = _.compact(gameStats);\r\n\t\r\n\t\t}, [playoff,regular,year]);\r\n\t\r\n\t\treturn (\r\n\t\t\t\t<Layout >\r\n\t\t\t\t\t<main className=\"container-fluid\">\r\n\t\t\t\t\t\t<Breadcrumb title=\"Game Records\"/>\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\"> \r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"regular-season\" value=\"regular-season\" onChange={(e) => {setRegular(e.target.checked)}} checked={regular} /> <span className=\"checkbox-label\">Regular Season</span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"playoffs\" value=\"playoffs\" onChange={(e) => {setPlayoff(e.target.checked)}} checked={playoff} /> <span className=\"checkbox-label\">Playoffs</span>\r\n\t\t\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t\t\t<YearSelect data={yearLabels} change={(e) => {setYear( e.target.value)}}/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<GameRecord data={topScores} label=\"Score\" title=\"Top Ten Scores\"  />\r\n\t\t\t\t\t\t\t\t\t\t<GameRecord data={bottomScores} label=\"Score\" title=\"Bottom Ten Scores\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t\t\t\t<MatchupRecord data={topVictoryMargin} label=\"Margin\" title=\"Top Ten Victory Margins\" />\r\n\t\t\t\t\t\t\t\t\t\t<MatchupRecord data={bottomVictoryMargin} label=\"Margin\" title=\"Bottom Ten Victory Margins\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer small text-muted\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Layout>\r\n\t\t);\r\n\r\n}\r\nexport default TeamRecords;\r\n\r\nexport const pageQuery = graphql`\r\n{\r\n  allGamesJson {\r\n    nodes {\r\n      id\r\n      year\r\n      winner\r\n      week\r\n      playoffTierType\r\n      team_a {\r\n        logo\r\n        name\r\n        owner\r\n        ownerId\r\n        rank\r\n        score\r\n      }\r\n      team_b {\r\n        logo\r\n        name\r\n        owner\r\n        ownerId\r\n        rank\r\n        score\r\n      } \r\n    }\r\n  }\r\n  allOwnersJson {\r\n    nodes {\r\n      fantasyname\r\n      id\r\n      image\r\n      name\r\n      status\r\n    }\r\n  }\r\n}\r\n`;\r\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","import React from 'react';\r\n\r\nimport './_matchup-record.scss';\r\n\r\n\r\nconst MatchupRecord = (props) =>\r\n  (<div className=\"col-lg-6 records\">\r\n    <div className=\"row mx-lg-2 mb-5 mb-lg-2 clippedbox--color-dark text-center\">\r\n      <h2 className=\"heading--gray my-4 col-12\">{props.title}</h2>\r\n      <div className=\"offset-1 col-5 r px-0 mb-1\">\r\n        <p className=\"heading--gray\">Matchup</p>\r\n      </div>\r\n      <div className=\"col-2 px-0\">\r\n        <p className=\"heading--gray\">Year</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">Week</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">{props.label}</p>\r\n      </div>\r\n        {props.data.map((item, i) =>(\r\n          <React.Fragment key={i}>\r\n            <div className=\"col-12 alt\">\r\n              <div className=\"row my-2 flex-center\">\r\n                <div className=\"col-1 pr-0\">\r\n                  <p className=\"rank-number\">{i + 1}</p>\r\n                </div>\r\n                <div className=\"col-5 text-center px-0\">\r\n                  <p>{item.winner} <span>- {item.scoreWin}</span></p>\r\n                  <p className=\"heading--gray mx-2 text-center\">VS</p>\r\n                  <p>{item.loser} <span>- {item.scoreLose}</span></p>\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <p>{item.year}</p>\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <p>{item.week}</p>\r\n                </div>\r\n                <div className= \"col-2 text-center\">\r\n                  {props.show === 'Margin' &&\r\n                    <p>{item.margin}</p>\r\n                  }  \r\n                  {props.show === 'Points' &&\r\n                    <p>{item.sumScore}</p>\r\n                  }\r\n                  {props.show === 'scoreWin' &&\r\n                    <p>{item.scoreWin}</p>\r\n                  }  \r\n                  {props.show === 'scoreLose' &&\r\n                    <p>{item.scoreLose}</p>\r\n                  }  \r\n                    \r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>);\r\n\r\nexport default MatchupRecord;\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n","import React from 'react';\r\n\r\nimport './_year-selector.scss';\r\n\r\nconst YearSelect = (props)  =>\r\n   (\t \r\n\t\t<select className=\"form-control\" id=\"yearSelector\" onChange={props.change}>\r\n\t\t   <option value=\"All\">All-Time</option>\r\n\t\t\t\t\t\t\t{props.data.map((year, index) => {\r\n\t\t\t\t\t return <option key={'key'+index} value={year}>{year}</option>\r\n\t\t\t\t\t})}\r\n\t\t\t </select>\r\n      );\r\n          \r\n          \r\nexport default YearSelect;"],"sourceRoot":""}