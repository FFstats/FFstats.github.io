{"version":3,"sources":["webpack:///./src/helpers/game.js","webpack:///./src/pages/gamerecords.js","webpack:///./node_modules/lodash/compact.js"],"names":["_","require","IndexPage","props","yearChangeHandler","event","selected","target","value","setState","YearSelected","loadYearData","owners","data","allDataJson","edges","node","year","state","includeRegularSeason","refs","regular_season","checked","includePlayoffs","playoffs","allYearsObject","gamesByYear","yearObject","find","obj","gameWeeks","allGamesYear","gameStats","allScores","gamesByOwner","forEach","element","weeks","push","reverse","i","length","week","games","game","id","team_a","ownerId","name","score","image","team_b","owner","winner","winnerId","loser","loserId","scoreWin","scoreLose","parseFloat","margin","toFixed","sumScore","gameOutcome","topScores","bottomScores","topVictoryMargin","bottomVictoryMargin","mostPoints","fewestPoints","highestScoreLoss","lowestScoreWin","regularSeasonClickHandler","bind","yearLabels","UNSAFE_componentWillMount","years","this","weeks_games","playOffWeeks","currentYear","playoffTierType","isPlayoff","componentDidMount","render","className","title","type","ref","onChange","defaultChecked","change","GameRecord","label","MatchupRecord","show","React","Component","module","exports","array","index","resIndex","result"],"mappings":"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","file":"component---src-pages-gamerecords-js-f02d8cd1480f3754dce3.js","sourcesContent":["\r\nconst _ = require('lodash');\r\n\r\nexport function gameOutcome(game,owners) {\r\n\r\n  var winner, winnerId, loser, loserId, scoreWin, scoreLose;\r\n  winner = winnerId = loser = loserId = '';\r\n  scoreWin = scoreLose = 0;\r\n  if (parseFloat(game.team_a[\"0\"].score) > parseFloat(game.team_b[\"0\"].score)) {\r\n    winnerId = game.team_a[\"0\"].ownerId;\r\n    scoreWin = game.team_a[\"0\"].score;\r\n    loserId = game.team_b[\"0\"].ownerId;\r\n    scoreLose = game.team_b[\"0\"].score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n  else if (parseFloat(game.team_b[\"0\"].score) > parseFloat(game.team_a[\"0\"].score)) {\r\n    winnerId = game.team_b[\"0\"].ownerId;\r\n    scoreWin = game.team_b[\"0\"].score;\r\n    loserId = game.team_a[\"0\"].ownerId;\r\n    scoreLose = game.team_a[\"0\"].score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n\r\n  if (winner !== '') {\r\n    return {\r\n      winner: winner,\r\n      loser: loser,\r\n      winnerId: winnerId,\r\n      loserId: loserId,\r\n      scoreWin: scoreWin,\r\n      scoreLose: scoreLose,\r\n      week: game.week,\r\n      year: game.year,\r\n      margin: parseFloat((scoreWin - scoreLose).toFixed(2)),\r\n      sumScore: parseFloat((scoreWin + scoreLose).toFixed(2))\r\n    };\r\n  }\r\n}\r\n\r\nexport function minus(a, b) {\r\n  return a - b;\r\n}\r\n\r\nexport function multiply(a, b) {\r\n  return a * b;\r\n}\r\n\r\nexport function divide(a, b) {\r\n  return a / b;\r\n}","import _ from 'lodash';\r\nimport React from 'react';\r\nimport {graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\";\r\nimport Breadcrumb from '../components/breadcrumb';\r\nimport YearSelect from '../components/year-selector';\r\nimport GameRecord from '../components/GameRecord';\r\nimport MatchupRecord from '../components/MatchupRecord';\r\nimport { gameOutcome} from '../helpers/game';\r\n\r\nclass IndexPage extends React.Component {\r\n\tconstructor(props) {\r\n\t\t\t\t\t\tsuper(props);\r\n\t\t\t\t\t\tthis.yearChangeHandler = this.yearChangeHandler.bind(this);\r\n\t\t\t\t\t\tthis.loadYearData = this.loadYearData.bind(this);\r\n\t        \tthis.state = {\r\n\t\t\t\t\t\t\tlowestScoreWin: [],\r\n\t\t\t\t\t\t\thighestScoreLoss: [],\r\n\t\t\t\t\t\t\tfewestPoints: [],\r\n\t\t\t\t\t\t\tmostPoints: [],\r\n\t\t\t\t\t\t\ttopVictoryMargin: [],\r\n\t\t\t\t\t\t\tbottomVictoryMargin: [],\r\n\t\t\t\t\t\t\ttopScores: [],\r\n\t\t\t\t\t\t\tbottomScores: [],\r\n\t\t\t\t\t\t\tyearLabels: [],\r\n\t\t\t\t\t\t\tYearSelected: \"\",\r\n\t\t\t\t\t\t\tgamesByYear: []\r\n\t\t        }\r\n\t        }\r\n\t\t\t\t\t\r\n\t\tyearChangeHandler = (event) => {\r\n\t\t\tvar selected = event.target.value;\r\n\t\t\tthis.setState(\r\n\t\t\t\t{ YearSelected: selected },\r\n\t\t\t\t() => this.loadYearData()\r\n\t\t\t)\r\n\t\t}\r\n\t\r\n\t\tloadYearData = () => {\r\n\t\t\tconst owners = this.props.data.allDataJson.edges[0].node.owners;\r\n\t\t\tvar year = this.state.YearSelected;\r\n\t\t\tvar includeRegularSeason = this.refs.regular_season.checked;\r\n\t\t\tvar includePlayoffs = this.refs.playoffs.checked;\r\n\r\n\t\t\tvar allYearsObject = this.state.gamesByYear;\r\n\t\t\tvar yearObject = this.state.gamesByYear.find(obj => obj.year === year);\r\n\t\t\tvar gameWeeks = [];\r\n\t\t\tvar allGamesYear = [];\r\n\t\t\tvar gameStats = [];\r\n\t\t\tlet allScores = [];\r\n\t\t\tvar gamesByOwner = [];\r\n\r\n\t\t\tif (year === 'All') {\r\n\t\t\t\tallYearsObject.forEach(function (element) {\r\n\t\t\t\t\tlet weeks = element.weeks;\r\n\t\t\t\t\t// Just regular season\r\n\t\t\t\t\tif (!includePlayoffs && includeRegularSeason) { \r\n\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': false });\r\n\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//Just playoffs \r\n\t\t\t\t\telse if (includePlayoffs && !includeRegularSeason) {\r\n\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': true });\r\n\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// All\r\n\t\t\t\t\telse if (includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t}\t\t\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet weeks = yearObject.weeks;\r\n\t\t\t\t// Just regular season\r\n\t\t\t\tif (!includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': false });\r\n\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t}\r\n\t\t\t\t//Just playoffs \r\n\t\t\t\telse if (includePlayoffs && !includeRegularSeason) {\r\n\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': true });\r\n\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t}\r\n\t\t\t\t// All\r\n\t\t\t\telse if (includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tgameWeeks.reverse();\r\n\r\n\t\t\t//get all games from weeks for each year\r\n\t\t\tif (year === 'All') {\r\n\t\t\t\tfor (let i = 0; i < gameWeeks.length; i++) {\r\n\t\t\t\t\tgameWeeks[i].forEach((week) => {\r\n\t\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\t\tallGamesYear.push(game);\r\n\t\t\t\t\t\t\tallScores.push({\r\n\t\t\t\t\t\t\t\tid: game.team_a[\"0\"].ownerId,\r\n\t\t\t\t\t\t\t\tname: _.find(owners, ['id', game.team_a[\"0\"].ownerId]).name,\r\n\t\t\t\t\t\t\t\tscore: game.team_a[\"0\"].score,\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\t\t\t\timage: _.find(owners, ['id', game.team_a[\"0\"].ownerId]).image\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tallScores.push({\r\n\t\t\t\t\t\t\t\tid: game.team_b[\"0\"].ownerId,\r\n\t\t\t\t\t\t\t\tname: _.find(owners, ['id', game.team_b[\"0\"].ownerId]).name,\r\n\t\t\t\t\t\t\t\tscore: game.team_b[\"0\"].score,\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\t\t\t\timage: _.find(owners, ['id', game.team_b[\"0\"].ownerId]).image\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Get games for just one year\r\n\t\t\telse {\r\n\t\t\t\tgameWeeks.forEach((week) => {\r\n\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\tallGamesYear.push(game);\r\n\t\t\t\t\t\tallScores.push({\r\n\t\t\t\t\t\t\tid: game.team_a[\"0\"].ownerId,\r\n\t\t\t\t\t\t\tname: _.find(owners, ['id', game.team_a[\"0\"].ownerId]).name,\r\n\t\t\t\t\t\t\tscore: game.team_a[\"0\"].score,\r\n\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\t\t\timage: _.find(owners, ['id', game.team_a[\"0\"].ownerId]).image\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tallScores.push({\r\n\t\t\t\t\t\t\tid: game.team_b[\"0\"].ownerId,\r\n\t\t\t\t\t\t\tname: _.find(owners, ['id', game.team_b[\"0\"].ownerId ]).name,\r\n\t\t\t\t\t\t\tscore: game.team_b[\"0\"].score,\r\n\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\t\t\timage: _.find(owners, ['id', game.team_b[\"0\"].ownerId]).image\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\t//get games by Owner\r\n\t\t\tvar teamObject = []\r\n\t\t\tif(year === 'All') {\r\n\t\t\t\tallGamesYear.forEach((game) => {\r\n\t\t\t\t\tif (gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId)) {\r\n\t\t\t\t\t\tteamObject = gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId);\r\n\t\t\t\t\t\t\tteamObject.games.push(game);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgamesByOwner.push({\r\n\t\t\t\t\t\t\tid: game.team_a[\"0\"].ownerId,\r\n\t\t\t\t\t\t\tname: game.team_a[\"0\"].owner,\r\n\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId)) {\r\n\t\t\t\t\t\tteamObject = gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId);\r\n\t\t\t\t\t\t\tteamObject.games.push(game);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgamesByOwner.push({\r\n\t\t\t\t\t\t\tid: game.team_b[\"0\"].ownerId,\r\n\t\t\t\t\t\t\tname: game.team_b[\"0\"].owner,\r\n\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else { \r\n\t\t\t\tallGamesYear.forEach((game) => {\r\n\t\t\t\tif(game.team_a[\"0\"].name) {\r\n\t\t\t\t\tif (gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId)) {\r\n\t\t\t\t\t\tteamObject = gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId);\r\n\t\t\t\t\t\t\tteamObject.games.push(game);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgamesByOwner.push({\r\n\t\t\t\t\t\t\tid: game.team_a[\"0\"].ownerId,\r\n\t\t\t\t\t\t\tname: game.team_a[\"0\"].name,\r\n\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t\t\r\n\t\t\t\tif(game.team_b[\"0\"].name) {\r\n\t\t\t\t\tif (gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId)) {\r\n\t\t\t\t\t\tteamObject = gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId);\r\n\t\t\t\t\t\t\tteamObject.games.push(game);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgamesByOwner.push({\r\n\t\t\t\t\t\t\tid: game.team_b[\"0\"].ownerId,\r\n\t\t\t\t\t\t\tname: game.team_b[\"0\"].name,\r\n\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tallGamesYear.forEach((game) => {\r\n\t\t\t\tgameStats.push(gameOutcome(game,owners));\r\n\t\t\t});\r\n\r\n\r\n\t\t\tallScores = _.sortBy(allScores, ['score']);\r\n\t\t\tvar topScores = _.orderBy(_.takeRight(allScores, 10), ['score'], ['desc']);\r\n\t\t\tvar bottomScores = _.take(allScores, 10);\r\n\r\n\t\t\tgameStats = _.compact(gameStats);\r\n\t\t\tvar topVictoryMargin = _.orderBy(_.takeRight(_.sortBy(gameStats, ['margin']), 10), ['margin'], ['desc']);\r\n\t\t\tvar bottomVictoryMargin = _.take(_.sortBy(gameStats, ['margin']), 10);\r\n\r\n\t\t\tvar mostPoints = _.orderBy(_.takeRight(_.sortBy(gameStats, ['sumScore']), 10), ['sumScore'], ['desc']);\r\n\t\t\tvar fewestPoints = _.take(_.sortBy(gameStats, ['sumScore']), 10);\r\n\r\n\t\t\tvar highestScoreLoss = _.orderBy(_.takeRight(_.sortBy(gameStats, ['scoreLose']), 10), ['scoreLose'], ['desc']);\r\n\t\t\tvar lowestScoreWin = _.take(_.sortBy(gameStats, ['scoreWin']), 10);\r\n\r\n\t\t\t\r\n\t\t\tthis.setState({ lowestScoreWin: lowestScoreWin });\r\n\t\t\tthis.setState({ highestScoreLoss: highestScoreLoss });\r\n\t\t\tthis.setState({ fewestPoints: fewestPoints });\r\n\t\t\tthis.setState({ mostPoints: mostPoints });\r\n\t\t\tthis.setState({ topVictoryMargin: topVictoryMargin });\r\n\t\t\tthis.setState({ bottomVictoryMargin: bottomVictoryMargin });\r\n\t\t\tthis.setState({ topScores: topScores });\r\n\t\t\tthis.setState({ bottomScores: bottomScores });\r\n\t\t\t\r\n\t\t}\r\n\t\r\n\t\tUNSAFE_componentWillMount() {\r\n\t\t\tconst years = this.props.data.allDataJson.edges[0].node.years;\r\n\t\t\tvar games = [];\r\n\t\t\t\r\n\t\t\tyears.forEach((year) => {\r\n\t\t\t\tyear.weeks_games.forEach((week) => {\r\n\t\t\t\t\tgames.push(...week.games);\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tvar playOffWeeks = [];\r\n\t\t\tvar gamesByYear = [];\r\n\t\t\tvar yearLabels = [];\r\n\t\t\t\r\n\t\t\t// get games by years and weeks\r\n\r\n\t\t\tgames.forEach((game) => {\r\n\t\t\t\t// If year repeats itself\r\n\t\t\t\tif(gamesByYear.find(obj => obj.year === game.year)) { \r\n\t\t\t\t\tvar currentYear = gamesByYear.find(obj => obj.year === game.year)\r\n\t\t\t\t\t\tif (currentYear.weeks.find(obj => obj.week === game.week)) {\r\n\t\t\t\t\t\t\tvar currentWeek = currentYear.weeks.find(obj => obj.week === game.week)\r\n\t\t\t\t\t\t\tcurrentWeek.games.push(game);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcurrentYear.weeks.push({\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t} else { // Initial year \r\n\t\t\t\t\tgamesByYear.push({\r\n\t\t\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\t\t\tweeks: [{\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tyearLabels.push(game.year);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// mark the playoff weeks and populate array\r\n\t\t\tgamesByYear.forEach((year) => {\r\n\t\t\t\tyear.weeks.forEach((week) => {\r\n\t\t\t\t\tif (week.games[0].playoffTierType !== 'NONE') {\r\n\t\t\t\t\t\tweek.isPlayoff = true;\r\n\t\t\t\t\t\tplayOffWeeks.push(week)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tweek.isPlayoff = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}); \r\n\t\t\t\r\n\t\t\tyearLabels.reverse();\r\n\r\n\t\t\tthis.setState({yearLabels:yearLabels });\r\n\t\t\r\n\t\t\tthis.setState({gamesByYear:gamesByYear})\r\n\t\t\tthis.setState({YearSelected: 'All' })\r\n\t\t\t \r\n  \t}        \r\n  \t\r\n\t\tcomponentDidMount() {\r\n\t\t\tthis.loadYearData();\r\n\t\t}\r\n\t\t\t\r\n\t\tregularSeasonClickHandler = event => {\r\n\t\t\tthis.loadYearData();\r\n\t\t}\r\n\t\t\r\n  \trender() {\r\n\t\r\n\t\t return (\r\n\t\t\t <Layout>\r\n\t\t   <main className=\"container-fluid\">\r\n\t\t    <Breadcrumb title=\"Game Records\"/>\r\n\t\t\t\t <div className=\"card mb-3\">\r\n\t\t\t      <div className=\"card-header\"> \r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"regular-season\" ref=\"regular_season\" value=\"regular-season\" onChange={this.regularSeasonClickHandler} defaultChecked={true} /> <span className=\"checkbox-label\">Regular Season</span>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"playoffs\" ref=\"playoffs\" value=\"playoffs\" onChange={this.regularSeasonClickHandler} /> <span className=\"checkbox-label\">Playoffs</span>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<YearSelect data={this.state.yearLabels} change={(event) => this.yearChangeHandler(event)}/>\r\n\t\t\t      </div>\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<GameRecord data={this.state.topScores} label=\"Score\" title=\"Top Scores\"  />\r\n\t\t\t\t\t\t\t\t<GameRecord data={this.state.bottomScores} label=\"Score\" title=\"Lowest Scores\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t \t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t <MatchupRecord data={this.state.topVictoryMargin} label=\"Margin\" show=\"Margin\" title=\"Highest Victory Margins\" />\r\n\t\t\t\t\t\t\t <MatchupRecord data={this.state.bottomVictoryMargin} label=\"Margin\" show=\"Margin\" title=\"Lowest Victory Margins\" />\r\n\t\t\t\t\t\t \t</div>\r\n\t\t\t\t\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t <MatchupRecord data={this.state.mostPoints} label=\"Points\" show=\"Points\" title=\"Most Combined Points\" />\r\n\t\t\t\t\t\t\t <MatchupRecord data={this.state.fewestPoints} label=\"Points\" show=\"Points\" title=\"Fewest Combined Points\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t <MatchupRecord data={this.state.highestScoreLoss} label=\"Score\" show=\"scoreLose\"  title=\"Highest Score in a Loss\" />\r\n\t\t\t\t\t\t\t <MatchupRecord data={this.state.lowestScoreWin} label=\"Score\" show=\"scoreWin\" title=\"Lowest Score in a Win\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t      </div>\r\n\t\t\t\t\t\t<div className=\"card-footer small text-muted\"></div>\r\n\t\t\t    </div>\r\n\t\t   </main>\r\n\t\t\t </Layout>\r\n\t\t\t );\r\n\t}\r\n}\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query gameRecordsQuery {\r\n\t\tallDataJson {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\towners {\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t\tfantasyname\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\timage\r\n\t\t\t\t\t\tstatus\r\n\t\t\t\t\t}\r\n\t\t\t\t\tyears{\r\n\t\t\t\t\t\tweeks_games {\r\n\t\t\t\t\t\t\tgames {\r\n\t\t\t\t\t\t\t\tweek\r\n\t\t\t\t\t\t\t\tplayoffTierType\r\n\t\t\t\t\t\t\t\tteam_a {\r\n\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\towner\r\n\t\t\t\t\t\t\t\t\townerId\r\n\t\t\t\t\t\t\t\t\tlogo\r\n\t\t\t\t\t\t\t\t\tscore\r\n\t\t\t\t\t\t\t\t\trank\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tteam_b {\r\n\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\towner\r\n\t\t\t\t\t\t\t\t\townerId\r\n\t\t\t\t\t\t\t\t\tlogo\r\n\t\t\t\t\t\t\t\t\tscore\r\n\t\t\t\t\t\t\t\t\trank\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tyear\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n}\r\n`;\r\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n"],"sourceRoot":""}