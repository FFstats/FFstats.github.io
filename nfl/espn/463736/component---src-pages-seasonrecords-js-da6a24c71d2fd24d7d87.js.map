{"version":3,"sources":["webpack:///./src/components/GameRecord/index.js","webpack:///./src/helpers/game.js","webpack:///./src/pages/seasonrecords.js","webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseAggregator.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/_defineProperty.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/_createAggregator.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./src/components/MatchupRecord/index.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_baseAssignValue.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_arrayAggregator.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/lodash/compact.js"],"names":["GameRecord","props","className","title","label","data","map","item","i","Fragment","key","alt","src","image","onError","ev","target","name","year","week","score","_","require","gamesByOwnerFunc","games","gamesByOwners","forEach","game","teamA","team_a","teamB","team_b","find","obj","id","ownerId","push","owner","gameOutcome","owners","winner","winnerId","loser","loserId","scoreWin","scoreLose","parseFloat","margin","toFixed","sumScore","SeasonRecords","query","allGamesJson","nodes","allOwnersJson","yearLabels","useState","Set","reverse","playoff","setPlayoff","regular","setRegular","topScores","bottomScores","topVictoryMargin","bottomVictoryMargin","gameStats","allScores","winners","filteredGames","useEffect","filter","playoffTierType","console","log","test","yearlyGames","winsByYear","yearlyGame","max","maxWinner","length","wins","type","value","onChange","e","checked","createFind","module","exports","baseFor","keys","object","iteratee","baseEach","collection","setter","accumulator","array","predicate","fromIndex","fromRight","index","getNative","defineProperty","func","Object","baseForOwn","createBaseEach","toFinite","result","remainder","reWhitespace","string","charAt","arrayAggregator","baseAggregator","baseIteratee","isArray","initializer","baseFindIndex","toInteger","nativeMax","Math","isArrayLike","findIndexFunc","iterable","undefined","toNumber","MatchupRecord","show","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","call","createBaseFor","trimmedEndIndex","reTrimStart","slice","replace","eachFunc","keysFunc","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","resIndex"],"mappings":"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","file":"component---src-pages-seasonrecords-js-da6a24c71d2fd24d7d87.js","sourcesContent":["import React from 'react';\r\n\r\nimport './_game-record.scss';\r\n\r\n\r\nconst GameRecord = (props) =>\r\n  (<div className=\"col-lg-6 records\">\r\n    <div className=\"row mx-lg-2 mb-5 mb-lg-2 clippedbox--color-dark-small text-center\">\r\n      <h2 className=\"heading--gray my-4 col-12\">{props.title}</h2>\r\n      <div className=\"col-6 px-0 mb-1\">\r\n        <p className=\"heading--gray\">Team</p>\r\n      </div>\r\n      <div className=\"col-2 px-0\">\r\n        <p className=\"heading--gray\">Year</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">Week</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">{props.label}</p>\r\n      </div>\r\n        {props.data.map((item, i) =>(\r\n          <React.Fragment key={i}>\r\n            <div className=\"col-12 alt\">\r\n              <div className=\"row flex-center\">\r\n            <div className=\"col-6 flex-center pr-0\">\r\n              <p  className=\"rank-number\">{i + 1}</p>\r\n                  <img alt=\"team-logo\" src={item.image} className=\"image\" onError={function (ev) { \r\n                    ev.target.src = \"https://fantasy-franchise.com/img/DEF.png\";\r\n                    }} />\r\n              <p>{item.name}</p>\r\n            </div>\r\n            <div className=\"col-2 px-0 text-center\">\r\n              <p>{item.year}</p>\r\n            </div>\r\n            <div className=\"col-2 text-center\">\r\n              <p>{item.week}</p>\r\n            </div>\r\n            <div className= \"col-2 px-0 text-center\">\r\n              <p>{item.score}</p>\r\n            </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>);\r\n\r\nexport default GameRecord;\r\n","\r\nconst _ = require('lodash');\r\n\r\nexport function gamesByOwnerFunc (games) {\r\n  //get games by owner\r\n  const gamesByOwners = [];\r\n  games.forEach((game) => {\r\n    const teamA = game?.team_a[0];\r\n    const teamB = game?.team_b[0];\r\n    let teamObject = [];\r\n    if (gamesByOwners.find(obj => obj.id === teamA?.ownerId)) {\r\n        teamObject = gamesByOwners.find(obj => obj.id === teamA?.ownerId);\r\n        teamObject.games.push(game);\r\n    } else {\r\n      gamesByOwners.push({\r\n        id: teamA?.ownerId,\r\n        name: teamA?.owner,\r\n        games: [game]\r\n      })\r\n    }\r\n    if (gamesByOwners.find(obj => obj.id === teamB?.ownerId)) {\r\n        teamObject = gamesByOwners.find(obj => obj.id === teamB?.ownerId);\r\n        teamObject.games.push(game);\r\n    } else {\r\n      gamesByOwners.push({\r\n        id: teamB?.ownerId,\r\n        name: teamB?.owner,\r\n        games: [game]\r\n      })\r\n    }\r\n  });\r\n\r\n  return gamesByOwners;\r\n}\r\n\r\nexport function gameOutcome(game,owners) {\r\n\r\n  let winner, winnerId, loser, loserId, scoreWin, scoreLose;\r\n  winner = winnerId = loser = loserId = '';\r\n  scoreWin = scoreLose = 0;\r\n  if (parseFloat(game.team_a[\"0\"].score) > parseFloat(game.team_b[\"0\"].score)) {\r\n    winnerId = game.team_a[\"0\"].ownerId;\r\n    scoreWin = game.team_a[\"0\"].score;\r\n    loserId = game.team_b[\"0\"].ownerId;\r\n    scoreLose = game.team_b[\"0\"].score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n  else if (parseFloat(game.team_b[\"0\"].score) > parseFloat(game.team_a[\"0\"].score)) {\r\n    winnerId = game.team_b[\"0\"].ownerId;\r\n    scoreWin = game.team_b[\"0\"].score;\r\n    loserId = game.team_a[\"0\"].ownerId;\r\n    scoreLose = game.team_a[\"0\"].score;\r\n    winner = _.find(owners, ['id', winnerId]).name;\r\n    loser = _.find(owners, ['id', loserId]).name;\r\n  }\r\n\r\n  if (winner !== '') {\r\n    return {\r\n      winner: winner,\r\n      loser: loser,\r\n      winnerId: winnerId,\r\n      loserId: loserId,\r\n      scoreWin: scoreWin,\r\n      scoreLose: scoreLose,\r\n      week: game.week,\r\n      year: game.year,\r\n      margin: parseFloat((scoreWin - scoreLose).toFixed(2)),\r\n      sumScore: parseFloat((scoreWin + scoreLose).toFixed(2))\r\n    };\r\n  }\r\n}\r\n\r\nexport function minus(a, b) {\r\n  return a - b;\r\n}\r\n\r\nexport function multiply(a, b) {\r\n  return a * b;\r\n}\r\n\r\nexport function divide(a, b) {\r\n  return a / b;\r\n}","import _ from 'lodash';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\";\r\nimport Breadcrumb from '../components/breadcrumb';\r\nimport GameRecord from '../components/GameRecord';\r\nimport MatchupRecord from '../components/MatchupRecord';\r\nimport { gameOutcome } from '../helpers/game';\r\n\r\nconst SeasonRecords = (query) => {\r\n\t\t// Get GraphlQL data\r\n\t\tconst games = query.data.allGamesJson.nodes;\r\n\t\tconst owners = query.data.allOwnersJson.nodes;\r\n\r\n\t\tconst [yearLabels] = useState([...new Set(games.map(item => item.year))].reverse());\r\n\t\tconst [playoff, setPlayoff] = useState(false);\r\n\t\tconst [regular, setRegular] = useState(true);\r\n\t\tconst [topScores, setTopScores] = useState([]);\r\n\t\tconst [bottomScores, setBottomScores] = useState([]);\r\n\t\tconst [topVictoryMargin, setTopVictoryMargin] = useState([]);\r\n\t\tconst [bottomVictoryMargin, setBottomVictoryMargin] = useState([]);\r\n\r\n\t\tlet gameStats = [];\r\n\t\tlet allScores = [];\r\n\t\tlet winners = [];\r\n\t\tlet filteredGames = games;\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\r\n\t\t\tif (!playoff) {\r\n\t\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\t\treturn game.playoffTierType !== \"WINNERS_BRACKET\";\r\n\t\t\t\t});            \r\n\t\t\t}  \r\n\t\t\t\r\n\t\t\tif (!regular) {\r\n\t\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\t\treturn game.playoffTierType !== \"NONE\";\r\n\t\t\t\t});            \r\n\t\t\t} \r\n\t\r\n\t\t\tfilteredGames.forEach((game) => {\r\n\t\t\t\tgameStats.push(gameOutcome(game,owners));\r\n\t\t\t});\r\n\t\t\t// Remove empty sets\r\n\t\t\tgameStats = _.compact(gameStats);\r\n\t\t\tconsole.log(gameStats,\"gameStats\")\r\n\r\n\t\t\tconsole.log(filteredGames,\"filteredGames\")\r\n\t\t\t\r\n\t\r\n\t\t\t// Get all scores in separate objects so we can find the max and min easily\r\n\t\t\tfilteredGames.forEach(game=> {\r\n\t\t\t\tconst teamA = game.team_a[\"0\"];\r\n\t\t\t\tconst teamB = game.team_b[\"0\"];\r\n\t\r\n\t\t\t\tallScores.push({\r\n\t\t\t\t\tid: teamA.ownerId,\r\n\t\t\t\t\tname: _.find(owners, ['id', teamA.ownerId]).name,\r\n\t\t\t\t\tscore: teamA.score,\r\n\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\timage: _.find(owners, ['id', teamA.ownerId]).image\r\n\t\t\t\t});\r\n\t\t\t\tallScores.push({\r\n\t\t\t\t\tid: teamB.ownerId,\r\n\t\t\t\t\tname: _.find(owners, ['id', teamB.ownerId ]).name,\r\n\t\t\t\t\tscore: teamB.score,\r\n\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\timage: _.find(owners, ['id', teamB.ownerId]).image\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tconst groupByYear = _.groupBy(gameStats, (game) => {\r\n\t\t\t\treturn [game['year']];\r\n\t\t\t});\r\n\r\n\t\t\tconst test = _.groupBy(gameStats, (game) => {\r\n\t\t\t\treturn [game['year'], game['winnerID']];\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(test,\"test\")\r\n\r\n/*\r\n\t\t\tconst ans = _(data)\r\n\t\t\t\t.groupBy('year')\r\n\t\t\t\t.map((platform, id) => ({\r\n\t\t\t\t\tplatformId: id,\r\n\t\t\t\t\tpayout: _.sumBy(platform, 'payout'),\r\n\t\t\t\t\tnumOfPeople: _.sumBy(platform, 'numOfPeople')\r\n\t\t\t\t}))\r\n\t\t\t\t.value()\r\n\r\n\t\t\tconsole.log(ans);\r\n\r\n\t\t\t\t\t\t\t\r\n\t\t\tconst test = _.map(_.groupBy(yearlyGames, 'year'), (o,idx) => { return { id: idx, \r\n\t\t\t\tsummed: _.sumBy(o,'sum_me') }})\r\n\t\t\t*/\r\n\r\n\t\r\n\t\t\t// Sort by year and get max wins per year\r\n\t\t\tyearLabels.forEach(year => {\r\n\t\t\t\tconst yearlyGames = gameStats.filter(function (game) {\r\n\t\t\t\t\treturn game.year === year;\r\n\t\t\t\t});\r\n\r\n\r\n\r\n\t\t\t\tconst winsByYear = _.groupBy(yearlyGames, (yearlyGame) => {\r\n\t\t\t\t\treturn [yearlyGame['winnerId']];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst losesByYear = _.groupBy(yearlyGames, (yearlyGame) => {\r\n\t\t\t\t\treturn [yearlyGame['loserId']];\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet max = 0;\r\n\t\t\t\tlet maxWinner = {};\r\n\t\t\t\tfor (let key in winsByYear) {\r\n\t\t\t\t\tif (max < winsByYear[key].length) {\r\n\t\t\t\t\t\tmax = winsByYear[key].length;\r\n\t\t\t\t\t\tmaxWinner.id = key;\r\n\t\t\t\t\t\tmaxWinner.wins = winsByYear[key].length;\r\n\t\t\t\t\t\tmaxWinner.year = year;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log(maxWinner,\"maxWinner\")\r\n\t\t\t\twinners.push(maxWinner);\r\n\r\n\r\n\t\t\t});\r\n\r\n\t\t\tconsole.log(winners,\"winners\")\r\n\t\r\n\t\t}, [playoff,regular]);\r\n\t\r\n\t\treturn (\r\n\t\t\t\t<Layout >\r\n\t\t\t\t\t<main className=\"container-fluid\">\r\n\t\t\t\t\t\t<Breadcrumb title=\"Game Records\"/>\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\"> \r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"regular-season\" value=\"regular-season\" onChange={(e) => {setRegular(e.target.checked)}} checked={regular} /> <span className=\"checkbox-label\">Regular Season</span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"playoffs\" value=\"playoffs\" onChange={(e) => {setPlayoff(e.target.checked)}} checked={playoff} /> <span className=\"checkbox-label\">Playoffs</span>\r\n\t\t\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<GameRecord data={topScores} label=\"Score\" title=\"Top Ten Scores\"  />\r\n\t\t\t\t\t\t\t\t\t\t<GameRecord data={bottomScores} label=\"Score\" title=\"Bottom Ten Scores\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t\t\t\t<MatchupRecord data={topVictoryMargin} label=\"Margin\" title=\"Top Ten Victory Margins\" />\r\n\t\t\t\t\t\t\t\t\t\t<MatchupRecord data={bottomVictoryMargin} label=\"Margin\" title=\"Bottom Ten Victory Margins\" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer small text-muted\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</Layout>\r\n\t\t);\r\n\r\n}\r\nexport default SeasonRecords;\r\n\r\nexport const pageQuery = graphql`\r\n{\r\n  allGamesJson {\r\n    nodes {\r\n      id\r\n      year\r\n      winner\r\n      week\r\n      playoffTierType\r\n      team_a {\r\n        logo\r\n        name\r\n        owner\r\n        ownerId\r\n        rank\r\n        score\r\n      }\r\n      team_b {\r\n        logo\r\n        name\r\n        owner\r\n        ownerId\r\n        rank\r\n        score\r\n      } \r\n    }\r\n  }\r\n  allOwnersJson {\r\n    nodes {\r\n      fantasyname\r\n      id\r\n      image\r\n      name\r\n      status\r\n    }\r\n  }\r\n}\r\n`;\r\n","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","import React from 'react';\r\n\r\nimport './_matchup-record.scss';\r\n\r\n\r\nconst MatchupRecord = (props) =>\r\n  (<div className=\"col-lg-6 records\">\r\n    <div className=\"row mx-lg-2 mb-5 mb-lg-2 clippedbox--color-dark text-center\">\r\n      <h2 className=\"heading--gray my-4 col-12\">{props.title}</h2>\r\n      <div className=\"offset-1 col-5 r px-0 mb-1\">\r\n        <p className=\"heading--gray\">Matchup</p>\r\n      </div>\r\n      <div className=\"col-2 px-0\">\r\n        <p className=\"heading--gray\">Year</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">Week</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">{props.label}</p>\r\n      </div>\r\n        {props.data.map((item, i) =>(\r\n          <React.Fragment key={i}>\r\n            <div className=\"col-12 alt\">\r\n              <div className=\"row my-2 flex-center\">\r\n                <div className=\"col-1 pr-0\">\r\n                  <p className=\"rank-number\">{i + 1}</p>\r\n                </div>\r\n                <div className=\"col-5 text-center px-0\">\r\n                  <p>{item.winner} <span>- {item.scoreWin}</span></p>\r\n                  <p className=\"heading--gray mx-2 text-center\">VS</p>\r\n                  <p>{item.loser} <span>- {item.scoreLose}</span></p>\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <p>{item.year}</p>\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <p>{item.week}</p>\r\n                </div>\r\n                <div className= \"col-2 text-center\">\r\n                  {props.show === 'Margin' &&\r\n                    <p>{item.margin}</p>\r\n                  }  \r\n                  {props.show === 'Points' &&\r\n                    <p>{item.sumScore}</p>\r\n                  }\r\n                  {props.show === 'scoreWin' &&\r\n                    <p>{item.scoreWin}</p>\r\n                  }  \r\n                  {props.show === 'scoreLose' &&\r\n                    <p>{item.scoreLose}</p>\r\n                  }  \r\n                    \r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>);\r\n\r\nexport default MatchupRecord;\r\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n"],"sourceRoot":""}