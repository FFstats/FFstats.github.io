{"version":3,"sources":["webpack:///./node_modules/lodash/find.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFindIndex.js","webpack:///./node_modules/lodash/_baseEach.js","webpack:///./node_modules/lodash/toInteger.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/findIndex.js","webpack:///./node_modules/lodash/_createFind.js","webpack:///./node_modules/lodash/toFinite.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./src/pages/standings.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/filter.js","webpack:///./node_modules/lodash/_createBaseEach.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/lodash/_baseFilter.js","webpack:///./node_modules/lodash/toNumber.js"],"names":["find","createFind","module","exports","baseFor","keys","object","iteratee","array","predicate","fromIndex","fromRight","length","index","baseForOwn","baseEach","createBaseEach","toFinite","value","result","remainder","reWhitespace","string","test","charAt","baseFindIndex","baseIteratee","toInteger","nativeMax","Math","max","isArrayLike","findIndexFunc","collection","iterable","Object","key","undefined","toNumber","createBaseFor","IndexPage","props","yearChangeHandler","event","selected","target","setState","YearSelected","loadYearData","year","state","includeRegularSeason","refs","regular_season","checked","includePlayoffs","playoffs","allYearsObject","gamesByYear","yearObject","obj","gameWeeks","forEach","element","weeks","push","allGamesYear","gamesByOwner","statsByTeam","reverse","i","week","games","game","id","team_a","ownerId","name","owner","team_b","team","wins","loses","ties","points","pointsAgaisnt","parseFloat","score","winner","winRate","owners","data","allDataJson","edges","node","fantasyname","toFixed","pointsAgainst","sort","a","b","Date","rank","regularSeasonClickHandler","bind","yearLabels","UNSAFE_componentWillMount","years","this","weeks_games","playOffWeeks","currentYear","isPlayoff","playoffTierType","check","componentDidMount","render","className","title","type","ref","onChange","defaultChecked","change","options","defaultSortName","defaultSortOrder","bordered","trClassName","version","dataField","isKey","dataSort","width","React","Component","trimmedEndIndex","reTrimStart","slice","replace","arrayFilter","baseFilter","isArray","eachFunc","keysFunc","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"mappings":"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","file":"component---src-pages-standings-js-293f0eacecda078a80d1.js","sourcesContent":["var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","import _ from 'lodash';\r\nimport React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\";\r\nimport Breadcrumb from '../components/breadcrumb';\r\nimport '../components/standings/_standings.scss';\r\nimport YearSelect from '../components/year-selector';\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\n\r\n\r\nclass IndexPage extends React.Component {\r\n\tconstructor(props) {\r\n\t\t\t\t\t\tsuper(props);\r\n\t\t\t\t\t\tthis.yearChangeHandler = this.yearChangeHandler.bind(this);\r\n\t\t\t\t\t\tthis.loadYearData = this.loadYearData.bind(this);\r\n\t        \tthis.state = {\r\n\t\t\t\t\t\t\t\tyearLabels: [],\r\n\t\t\t\t\t\t\t\tYearSelected: \"\",\r\n\t\t\t\t\t\t\t\tgamesByYear: [],\r\n\t\t\t\t\t\t\t\tstatsByTeam: []\r\n\r\n\t\t        }\r\n\t        }\r\n\t\t\t\t\t\r\n\t\tyearChangeHandler = (event) => {\r\n\t\t\tvar selected = event.target.value;\r\n\t\t\tthis.setState(\r\n\t\t\t\t{ YearSelected: selected },\r\n\t\t\t\t() => this.loadYearData()\r\n\t\t\t)\r\n\t\t}\r\n\t\r\n\t\tloadYearData = () => {\r\n\t\t\t\r\n\t\t\t\tvar year = this.state.YearSelected;\r\n\t\t\t\tvar includeRegularSeason = this.refs.regular_season.checked;\r\n\t\t\t\tvar includePlayoffs = this.refs.playoffs.checked;\r\n\r\n\t\t\t\tvar allYearsObject = this.state.gamesByYear;\r\n\t\t\t\tvar yearObject = this.state.gamesByYear.find(obj => obj.year === year);\r\n\t\t\t\tvar gameWeeks = [];\r\n\t\t\t\tif (year === 'All') {\r\n\t\t\t\t\tallYearsObject.forEach(function (element) {\r\n\t\t\t\t\t\tlet weeks = element.weeks;\r\n\t\t\t\t\t\t// Just regular season\r\n\t\t\t\t\t\tif (!includePlayoffs && includeRegularSeason) { \r\n\t\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': false });\r\n\t\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t//Just playoffs \r\n\t\t\t\t\t\telse if (includePlayoffs && !includeRegularSeason) {\r\n\t\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': true });\r\n\t\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// All\r\n\t\t\t\t\t\telse if (includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\t\t\tgameWeeks.push(weeks);\r\n\t\t\t\t\t\t}\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet weeks = yearObject.weeks;\r\n\t\t\t\t\t// Just regular season\r\n\t\t\t\t\tif (!includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': false });\r\n\t\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//Just playoffs \r\n\t\t\t\t\telse if (includePlayoffs && !includeRegularSeason) {\r\n\t\t\t\t\t\tweeks = _.filter(weeks, { 'isPlayoff': true });\r\n\t\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// All\r\n\t\t\t\t\telse if (includePlayoffs && includeRegularSeason) {\r\n\t\t\t\t\t\tgameWeeks = weeks;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar allGamesYear = [];\r\n\t\t\t\tvar gamesByOwner = [];\r\n\t\t\t\tvar statsByTeam = [];\r\n\t\t\t\tvar teamObject = [];\r\n\r\n\t\t\t\tgameWeeks.reverse();\r\n\r\n\t\t\t\t//get all games from weeks\r\n\t\t\t\tif (year === 'All') {\r\n\t\t\t\t\tfor (let i = 0; i < gameWeeks.length; i++) {\r\n\t\t\t\t\t\tgameWeeks[i].forEach((week) => {\r\n\t\t\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\t\t\tallGamesYear.push(game);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tgameWeeks.forEach((week) => {\r\n\t\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\t\tallGamesYear.push(game);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n  \r\n\t\t\t\t//get games by owner\r\n\r\n        allGamesYear.forEach((game) => {\r\n          if (gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId)) {\r\n              teamObject = gamesByOwner.find(obj => obj.id === game.team_a[\"0\"].ownerId);\r\n              teamObject.games.push(game);\r\n          } else {\r\n            gamesByOwner.push({\r\n              id: game.team_a[\"0\"].ownerId,\r\n              name: game.team_a[\"0\"].owner,\r\n              games: [game]\r\n            })\r\n          }\r\n          if (gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId)) {\r\n              teamObject = gamesByOwner.find(obj => obj.id === game.team_b[\"0\"].ownerId);\r\n              teamObject.games.push(game);\r\n          } else {\r\n            gamesByOwner.push({\r\n              id: game.team_b[\"0\"].ownerId,\r\n              name: game.team_b[\"0\"].owner,\r\n              games: [game]\r\n            })\r\n          }\r\n        })\r\n\r\n\t\t\t\t// process stats per team \r\n\r\n\t\t\t\tgamesByOwner.forEach((team) => {\r\n\t\t\t\t\tvar wins = 0,\r\n\t\t\t\t\t\tloses = 0,\r\n\t\t\t\t\t\tties = 0,\r\n\t\t\t\t\t\tpoints = 0,\r\n\t\t\t\t\t\tpointsAgaisnt = 0;\r\n\t\t\t\t\t\r\n\t\t\t\t\tteam.games.forEach((game) => {\r\n\t\t\t\t\t\tif(year === \"All\") {\r\n\t\t\t\t\t\t\tif(game.team_a[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t} else if (game.team_b[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t(game.winner === 'HOME' && game.team_a['0'].ownerId === team.id) ||\r\n\t\t\t\t\t\t\t\t(game.winner === 'AWAY' && game.team_b['0'].ownerId === team.id)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\twins++\r\n\t\t\t\t\t\t\t} else if (parseFloat(game.team_b[0].score) === parseFloat(game.team_a[0].score)) {\r\n\t\t\t\t\t\t\t\tties++\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tloses++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (game.team_a[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t} else if (game.team_b[0].ownerId === team.id) {\r\n\t\t\t\t\t\t\t\tpoints += parseFloat(game.team_b[0].score);\r\n\t\t\t\t\t\t\t\tpointsAgaisnt += parseFloat(game.team_a[0].score);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\t(game.winner === 'HOME' && game.team_a['0'].ownerId === team.id) ||\r\n\t\t\t\t\t\t\t\t(game.winner === 'AWAY' && game.team_b['0'].ownerId === team.id)\r\n\t\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\t\twins++\r\n\t\t\t\t\t\t\t} else if (parseFloat(game.team_b[0].score) === parseFloat(game.team_a[0].score)) {\r\n\t\t\t\t\t\t\t\tties++\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tloses++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tvar winRate = parseFloat(wins + (ties * .5))/team.games.length;\r\n\r\n\t\t\t\t\t// Get Owner name from Owners \r\n\t\t\t\t\t\r\n\t\t\t\t\tconst owners = this.props.data.allDataJson.edges[0].node.owners;\r\n\t\t\t\t\tconst owner = _.find(owners, ['id', team.id]);\r\n\t\t\t\t\tstatsByTeam.push({\r\n\t\t\t\t\t\tteam: owner.fantasyname !== '' ? owner.name + \" (\" + owner.fantasyname + \")\" : owner.name ,\r\n\t\t\t\t\t\twins: wins,\r\n\t\t\t\t\t\tloses: loses,\r\n\t\t\t\t\t\tties: ties,\r\n\t\t\t\t\t\tpoints: parseFloat(points.toFixed(2)),\r\n\t\t\t\t\t\tpointsAgainst: parseFloat(pointsAgaisnt.toFixed(2)),\r\n\t\t\t\t\t\twinRate: winRate.toFixed(3)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t\t\tstatsByTeam.sort(function(a, b) {\r\n\t\t\t\t\ta = new Date(a.wins);\r\n\t\t\t\t\tb = new Date(b.wins);\r\n\t\t\t\t\treturn a>b ? -1 : a<b ? 1 : 0;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tstatsByTeam.forEach((team, index) => {\r\n\t\t\t\t\tteam.rank = index + 1;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.setState(\r\n\t\t\t\t\t{ statsByTeam: statsByTeam }\r\n\t\t\t\t)\r\n\t\t}\r\n\t\r\n\t\tUNSAFE_componentWillMount() {\r\n\t\t\tconst years = this.props.data.allDataJson.edges[0].node.years;\r\n\t\t\tvar games = [];\r\n\r\n\t\t\tyears.forEach((year) => {\r\n\t\t\t\tyear.weeks_games.forEach((week) => {\r\n\t\t\t\t\tgames.push(...week.games);\r\n\t\t\t\t})\r\n\t\t\t});\r\n\r\n\t\t\tvar playOffWeeks = [];\r\n\t\t\tvar gamesByYear = [];\r\n\t\t\tvar yearLabels = [];\r\n\t\t\t\r\n\t\t\t// get games by years and weeks\r\n\r\n\t\t\tgames.forEach((game) => {\r\n\t\t\t\t// If year repeats itself\r\n\t\t\t\tif(gamesByYear.find(obj => obj.year === game.year)) { \r\n\t\t\t\t\tvar currentYear = gamesByYear.find(obj => obj.year === game.year)\r\n\t\t\t\t\t\tif (currentYear.weeks.find(obj => obj.week === game.week)) {\r\n\t\t\t\t\t\t\tvar currentWeek = currentYear.weeks.find(obj => obj.week === game.week)\r\n\t\t\t\t\t\t\tcurrentWeek.games.push(game);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcurrentYear.weeks.push({\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t} else { // Initial year \r\n\t\t\t\t\tgamesByYear.push({\r\n\t\t\t\t\t\t\tyear: game.year,\r\n\t\t\t\t\t\t\tweeks: [{\r\n\t\t\t\t\t\t\t\tweek: game.week,\r\n\t\t\t\t\t\t\t\tgames: [game]\r\n\t\t\t\t\t\t\t}]\r\n\t\t\t\t\t});\r\n\t\t\t\t\tyearLabels.push(game.year);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// mark the playoff weeks and populate array\r\n\t\t\tgamesByYear.forEach((year) => {\r\n\t\t\t\tyear.weeks.forEach((week) => {\r\n\t\t\t\t\tweek.isPlayoff = false;\r\n\t\t\t\t\tweek.games.forEach((game) => {\r\n\t\t\t\t\t\tif (game.playoffTierType !== 'NONE') {\r\n\t\t\t\t\t\t\tweek.isPlayoff = true;\r\n\t\t\t\t\t\t\tweek.games = _.filter(week.games, function (check) {\r\n\t\t\t\t\t\t\t\treturn check.playoffTierType !== \"NONE\";\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tif (week.isPlayoff === true) {\r\n\t\t\t\t\t\tplayOffWeeks.push(week);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tyearLabels.reverse();\r\n\r\n\t\t\tthis.setState({yearLabels:yearLabels });\r\n\t\t\tthis.setState({gamesByYear:gamesByYear})\r\n\t\t\tthis.setState({YearSelected: 'All' })\r\n\t\t\t \r\n  \t}        \r\n  \t\r\n  componentDidMount() {\r\n\t\tthis.loadYearData();\r\n\t}\r\n\t\t\r\n\tregularSeasonClickHandler = event => {\r\n\t\tthis.loadYearData();\r\n\t}\r\n\r\n\t\r\n\t\t\r\n  \trender() {\r\n\t\tconst options = {\r\n\t\t\tdefaultSortName: 'rank',\r\n\t\t\tdefaultSortOrder: 'asc'\r\n\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t return (\r\n\t\t\t <Layout >\r\n\t\t\t\t<main className=\"container-fluid standings\">\r\n\t\t\t\t\t<Breadcrumb title=\"Standings\"/>\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t\t\t\t\t<div className=\"card-header\"> \r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"regular-season\" ref=\"regular_season\" value=\"regular-season\" onChange={this.regularSeasonClickHandler} defaultChecked={true} /> <span className=\"checkbox-label\">Regular Season</span>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"playoffs\" ref=\"playoffs\" value=\"playoffs\" onChange={this.regularSeasonClickHandler} /> <span className=\"checkbox-label\">Playoffs</span>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<YearSelect data={this.state.yearLabels} change={(event) => this.yearChangeHandler(event)}/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t\t<BootstrapTable data={this.state.statsByTeam} options={ options } bordered={ false } trClassName=\"alt\" version='4'>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='rank' isKey={true} dataSort={true} className=\"heading--gray\" width=\"10%\">Rank</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='team' dataSort={ true } className=\"heading--gray\">Team</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='wins' dataSort={true}  className=\"heading--gray\" width=\"10%\">W</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='loses' dataSort={true} className=\"heading--gray\" width=\"10%\">L</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='ties' dataSort={true} className=\"heading--gray\" width=\"10%\">T</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='winRate' dataSort={true} className=\"heading--gray\" width=\"10%\">PCT</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='points' dataSort={true} className=\"heading--gray\" width=\"10%\">PF</TableHeaderColumn>\r\n\t\t\t\t\t\t\t\t<TableHeaderColumn dataField='pointsAgainst' dataSort={ true } className=\"heading--gray\" width=\"10%\">PA</TableHeaderColumn>\r\n\t\t\t\t\t\t\t</BootstrapTable>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer small text-muted\"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t </Layout>\r\n\t\t\t );\r\n\t}\r\n}\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query standingsQuery {\r\n\t\tallDataJson {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\towners {\r\n\t\t\t\t\t\tname\r\n\t\t\t\t\t\tfantasyname\r\n\t\t\t\t\t\tid\r\n\t\t\t\t\t\timage\r\n\t\t\t\t\t\tstatus\r\n\t\t\t\t\t}\r\n\t\t\t\t\tyears{\r\n\t\t\t\t\t\tweeks_games {\r\n\t\t\t\t\t\t\tgames {\r\n\t\t\t\t\t\t\t\tweek\r\n\t\t\t\t\t\t\t\tplayoffTierType\r\n\t\t\t\t\t\t\t\twinner\r\n\t\t\t\t\t\t\t\tteam_a {\r\n\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\towner\r\n\t\t\t\t\t\t\t\t\townerId\r\n\t\t\t\t\t\t\t\t\tlogo\r\n\t\t\t\t\t\t\t\t\tscore\r\n\t\t\t\t\t\t\t\t\trank\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tteam_b {\r\n\t\t\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\t\t\towner\r\n\t\t\t\t\t\t\t\t\townerId\r\n\t\t\t\t\t\t\t\t\tlogo\r\n\t\t\t\t\t\t\t\t\tscore\r\n\t\t\t\t\t\t\t\t\trank\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tyear\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n}\r\n`;\r\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"sourceRoot":""}