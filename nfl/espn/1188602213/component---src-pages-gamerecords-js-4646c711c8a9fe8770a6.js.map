{"version":3,"sources":["webpack:///./src/components/GameRecord/index.js","webpack:///./src/components/MatchupRecord/index.js","webpack:///./src/pages/gamerecords.js","webpack:///./node_modules/lodash/compact.js","webpack:///./src/components/year-selector/index.js"],"names":["GameRecord","props","className","title","label","data","map","item","i","Fragment","key","alt","src","image","onError","ev","target","name","year","week","score","MatchupRecord","winner","scoreWin","loser","scoreLose","show","margin","sumScore","GameRecords","query","games","allGamesJson","nodes","owners","allOwnersJson","yearLabels","useState","Set","reverse","items","setItems","setYear","playoff","setPlayoff","regular","setRegular","topScores","setTopScores","bottomScores","setBottomScores","topVictoryMargin","setTopVictoryMargin","bottomVictoryMargin","setBottomVictoryMargin","highestScoreLoss","setHighestScoreLoss","lowestScoreWin","setLowestScoreWin","mostPoints","setMostPoints","fewestPoints","setFewestPoints","useEffect","gameStats","allScores","filteredGames","filter","game","playoffTierType","parseInt","forEach","push","gameOutcomeWinner","teamA","team_a","teamB","team_b","id","ownerId","type","value","onChange","e","checked","change","module","exports","array","index","length","resIndex","result","YearSelect"],"mappings":"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","file":"component---src-pages-gamerecords-js-4646c711c8a9fe8770a6.js","sourcesContent":["import React from 'react';\r\n\r\nimport './_game-record.scss';\r\n\r\n\r\nconst GameRecord = (props) =>\r\n  (<div className=\"col-lg-6 records\">\r\n    <div className=\"row mx-lg-2 mb-5 mb-lg-2 clippedbox--color-dark-small text-center\">\r\n      <h2 className=\"heading--gray my-4 col-12\">{props.title}</h2>\r\n      <div className=\"col-6 px-0 mb-1\">\r\n        <p className=\"heading--gray\">Team</p>\r\n      </div>\r\n      <div className=\"col-2 px-0\">\r\n        <p className=\"heading--gray\">Year</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">Week</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">{props.label}</p>\r\n      </div>\r\n        {props.data.map((item, i) =>(\r\n          <React.Fragment key={i}>\r\n            <div className=\"col-12 alt\">\r\n              <div className=\"row flex-center\">\r\n            <div className=\"col-6 flex-center pr-0\">\r\n              <p  className=\"rank-number\">{i + 1}</p>\r\n                  <img alt=\"team-logo\" src={item.image} className=\"image\" onError={function (ev) { \r\n                    ev.target.src = \"https://fantasy-franchise.com/img/DEF.png\";\r\n                    }} />\r\n              <p className=\"name\">{item.name}</p>\r\n            </div>\r\n            <div className=\"col-2 px-0 text-center\">\r\n              <p>{item.year}</p>\r\n            </div>\r\n            <div className=\"col-2 text-center\">\r\n              <p>{item.week}</p>\r\n            </div>\r\n            <div className= \"col-2 px-0 text-center\">\r\n              <p>{item.score}</p>\r\n            </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>);\r\n\r\nexport default GameRecord;\r\n","import React from 'react';\r\n\r\nimport './_matchup-record.scss';\r\n\r\n\r\nconst MatchupRecord = (props) =>\r\n  (<div className=\"col-lg-6 records\">\r\n    <div className=\"row mx-lg-2 mb-5 mb-lg-2 clippedbox--color-dark text-center\">\r\n      <h2 className=\"heading--gray my-4 col-12\">{props.title}</h2>\r\n      <div className=\"offset-1 col-5 r px-0 mb-1\">\r\n        <p className=\"heading--gray\">Matchup</p>\r\n      </div>\r\n      <div className=\"col-2 px-0\">\r\n        <p className=\"heading--gray\">Year</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">Week</p>\r\n      </div>\r\n      <div className=\" col-2 px-0\">\r\n        <p className=\"heading--gray\">{props.label}</p>\r\n      </div>\r\n        {props.data.map((item, i) =>(\r\n          <React.Fragment key={i}>\r\n            <div className=\"col-12 alt\">\r\n              <div className=\"row my-2 flex-center\">\r\n                <div className=\"col-1 pr-0\">\r\n                  <p className=\"rank-number\">{i + 1}</p>\r\n                </div>\r\n                <div className=\"col-5 text-center px-0\">\r\n                  <p>{item.winner} <span>- {item.scoreWin}</span></p>\r\n                  <p className=\"heading--gray mx-2 text-center\">VS</p>\r\n                  <p>{item.loser} <span>- {item.scoreLose}</span></p>\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <p>{item.year}</p>\r\n                </div>\r\n                <div className=\"col-2 text-center\">\r\n                  <p>{item.week}</p>\r\n                </div>\r\n                <div className= \"col-2 text-center\">\r\n                  {props.show === 'Margin' &&\r\n                    <p>{item.margin}</p>\r\n                  }  \r\n                  {props.show === 'Points' &&\r\n                    <p>{item.sumScore}</p>\r\n                  }\r\n                  {props.show === 'scoreWin' &&\r\n                    <p>{item.scoreWin}</p>\r\n                  }  \r\n                  {props.show === 'scoreLose' &&\r\n                    <p>{item.scoreLose}</p>\r\n                  }  \r\n                    \r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n      </div>\r\n    </div>);\r\n\r\nexport default MatchupRecord;\r\n","import _ from 'lodash';\r\nimport React, { useState, useEffect } from 'react';\r\nimport {graphql } from 'gatsby';\r\nimport Layout from \"../components/layout\";\r\nimport Breadcrumb from '../components/breadcrumb';\r\nimport YearSelect from '../components/year-selector';\r\nimport GameRecord from '../components/GameRecord';\r\nimport MatchupRecord from '../components/MatchupRecord';\r\nimport { gameOutcomeWinner} from '../helpers/game';\r\n\r\nconst GameRecords = (query) => {\r\n\t// Get GraphlQL data\r\n\tconst games = query.data.allGamesJson.nodes;\r\n  const owners = query.data.allOwnersJson.nodes;\r\n\r\n\tconst [yearLabels] = useState([...new Set(games.map(item => item.year))].reverse());\r\n\tconst [items, setItems] = useState(10);\r\n\tconst [year, setYear] = useState(\"All\");\r\n  const [playoff, setPlayoff] = useState(false);\r\n  const [regular, setRegular] = useState(true);\r\n\tconst [topScores, setTopScores] = useState([]);\r\n\tconst [bottomScores, setBottomScores] = useState([]);\r\n\tconst [topVictoryMargin, setTopVictoryMargin] = useState([]);\r\n\tconst [bottomVictoryMargin, setBottomVictoryMargin] = useState([]);\r\n\tconst [highestScoreLoss, setHighestScoreLoss] = useState([]);\r\n\tconst [lowestScoreWin, setLowestScoreWin] = useState([]);\r\n\tconst [mostPoints, setMostPoints] = useState([]);\r\n\tconst [fewestPoints, setFewestPoints] = useState([]);\r\n\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\r\n\t\tlet gameStats = [];\r\n\t\tlet allScores = [];\r\n\t\tlet filteredGames = games;\r\n\t\t\r\n\t\tif (!playoff) {\r\n\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\treturn game.playoffTierType !== \"WINNERS_BRACKET\";\r\n\t\t\t});            \r\n\t\t}  \r\n\t\t\r\n\t\tif (!regular) {\r\n\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\treturn game.playoffTierType !== \"NONE\";\r\n\t\t\t});            \r\n\t\t} \r\n\r\n\t\tif (year !== 'All') {\r\n\t\t\tfilteredGames = filteredGames.filter(function (game) {\r\n\t\t\t\treturn game.year === parseInt(year);\r\n\t\t\t});  \r\n\t\t}\r\n\r\n\t\tfilteredGames.forEach((game) => {\r\n\t\t\tgameStats.push(gameOutcomeWinner(game,owners));\r\n\t\t});\r\n\r\n\t\t// Get all scores in separate objects so we can find the max and min easily\r\n\t\tfilteredGames.forEach(game=> {\r\n\t\t\tconst teamA = game.team_a[\"0\"];\r\n\t\t\tconst teamB = game.team_b[\"0\"];\r\n\r\n\t\t\tallScores.push({\r\n\t\t\t\tid: teamA.ownerId,\r\n\t\t\t\tname: _.find(owners, ['id', teamA.ownerId]).name,\r\n\t\t\t\tscore: teamA.score,\r\n\t\t\t\tweek: game.week,\r\n\t\t\t\tyear: game.year,\r\n\t\t\t\timage: _.find(owners, ['id', teamA.ownerId]).image\r\n\t\t\t});\r\n\t\t\tallScores.push({\r\n\t\t\t\tid: teamB.ownerId,\r\n\t\t\t\tname: _.find(owners, ['id', teamB.ownerId ]).name,\r\n\t\t\t\tscore: teamB.score,\r\n\t\t\t\tweek: game.week,\r\n\t\t\t\tyear: game.year,\r\n\t\t\t\timage: _.find(owners, ['id', teamB.ownerId]).image\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\t// Remove empty sets\r\n\t\tgameStats = _.compact(gameStats);\r\n\r\n\t\tallScores = _.sortBy(allScores, ['score']);\r\n\t\tsetTopScores(() => _.orderBy(_.takeRight(allScores, items), ['score'], ['desc']));\r\n\t\tsetBottomScores(() => _.take(allScores, items));\r\n\r\n\t\tsetTopVictoryMargin(() => _.orderBy(_.takeRight(_.sortBy(gameStats, ['margin']), items), ['margin'], ['desc']));\r\n\t\tsetBottomVictoryMargin(() => _.take(_.sortBy(gameStats, ['margin']), items));\r\n\r\n\t\t//TODO cambiar a incluir ties \r\n\t\tsetMostPoints(() => _.orderBy(_.takeRight(_.sortBy(gameStats, ['sumScore']), items), ['sumScore'], ['desc']));\r\n\t\tsetFewestPoints(() => _.take(_.sortBy(gameStats, ['sumScore']), items));\r\n\r\n\t\tsetHighestScoreLoss(() => _.orderBy(_.takeRight(_.sortBy(gameStats, ['scoreLose']), items), ['scoreLose'], ['desc']));\r\n\t\tsetLowestScoreWin(() => _.take(_.sortBy(gameStats, ['scoreWin']), items));\r\n\r\n\t}, [playoff,regular,year,games,owners,items]);\r\n\r\n\treturn (\r\n\t\t\t<Layout>\r\n\t\t\t<main className=\"container-fluid\">\r\n\t\t\t \t<Breadcrumb title=\"Game Records\"/>\r\n\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t\t<div className=\"card-header\"> \r\n\t\t\t\t\t\t<div className='card-content'>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"regular-season\" value=\"regular-season\" onChange={(e) => {setRegular(e.target.checked)}} checked={regular} /> <span className=\"checkbox-label\">Regular Season</span>\r\n\t\t\t\t\t\t\t<input type=\"checkbox\" id=\"playoffs\" value=\"playoffs\" onChange={(e) => {setPlayoff(e.target.checked)}} checked={playoff} /> <span className=\"checkbox-label\">Playoffs</span>\r\n\t\t\t\t\t\t\t<br/><br/>\r\n\t\t\t\t\t\t\t<label>Number of Records to show</label>\r\n\t\t\t\t\t\t\t<select className=\"form-control\" id=\"itemSelector\" onChange={(e) => {setItems( e.target.value)}}>\r\n\t\t\t\t\t\t\t\t<option value=\"10\">10</option>\r\n\t\t\t\t\t\t\t\t<option value=\"15\">15</option>\r\n\t\t\t\t\t\t\t\t<option value=\"20\">20</option>\r\n\t\t\t\t\t\t\t\t<option value=\"25\">25</option>\t\t\t\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<YearSelect data={yearLabels} change={(e) => {setYear( e.target.value)}}/>\r\n\t\t\t\t\t\t</div>\r\n          </div>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<GameRecord data={topScores} label=\"Score\" title=\"Top Scores\"  />\r\n\t\t\t\t\t\t\t<GameRecord data={bottomScores} label=\"Score\" title=\"Lowest Scores\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t<MatchupRecord data={topVictoryMargin} label=\"Margin\" show=\"Margin\" title=\"Highest Victory Margins\" />\r\n\t\t\t\t\t\t\t<MatchupRecord data={bottomVictoryMargin} label=\"Margin\" show=\"Margin\" title=\"Lowest Victory Margins\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t<MatchupRecord data={mostPoints} label=\"Points\" show=\"Points\" title=\"Most Combined Points\" />\r\n\t\t\t\t\t\t\t<MatchupRecord data={fewestPoints} label=\"Points\" show=\"Points\" title=\"Fewest Combined Points\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"row my-4\">\r\n\t\t\t\t\t\t\t<MatchupRecord data={highestScoreLoss} label=\"Score\" show=\"scoreLose\"  title=\"Highest Score in a Loss\" />\r\n\t\t\t\t\t\t\t<MatchupRecord data={lowestScoreWin} label=\"Score\" show=\"scoreWin\" title=\"Lowest Score in a Win\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-footer small text-muted\"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t\t</Layout>\r\n\t\t);\r\n};\r\nexport default GameRecords;\r\n\r\nexport const pageQuery = graphql`\r\n{\r\n  allGamesJson {\r\n    nodes {\r\n      id\r\n      year\r\n      winner\r\n      week\r\n      playoffTierType\r\n      team_a {\r\n        logo\r\n        name\r\n        owner\r\n        ownerId\r\n        rank\r\n        score\r\n      }\r\n      team_b {\r\n        logo\r\n        name\r\n        owner\r\n        ownerId\r\n        rank\r\n        score\r\n      } \r\n    }\r\n  }\r\n  allOwnersJson {\r\n    nodes {\r\n      fantasyname\r\n      id\r\n      image\r\n      name\r\n      status\r\n    }\r\n  }\r\n}\r\n`;\r\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = compact;\n","import React from 'react';\r\n\r\nimport './_year-selector.scss';\r\n\r\nconst YearSelect = (props)  =>\r\n   (\t \r\n\t\t<>\r\n\t\t<label>Year</label>\r\n\t\t<select className=\"form-control\" id=\"yearSelector\" onChange={props.change}>\r\n\t\t   <option value=\"All\">All-Time</option>\r\n\t\t\t\t\t\t\t{props.data.map((year, index) => {\r\n\t\t\t\t\t return <option key={'key'+index} value={year}>{year}</option>\r\n\t\t\t\t\t})}\r\n\t\t\t </select>\r\n\t\t\t </>  );\r\n          \r\n          \r\nexport default YearSelect;"],"sourceRoot":""}