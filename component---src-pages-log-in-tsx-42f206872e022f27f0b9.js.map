{"version":3,"file":"component---src-pages-log-in-tsx-42f206872e022f27f0b9.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./src/components/SignUpForm.tsx","webpack://gatsby-starter-hello-world/./src/pages/log-in.tsx","webpack://gatsby-starter-hello-world/./src/components/theme/ThemeNavbarLayout.js","webpack://gatsby-starter-hello-world/./src/hooks/useProtectedRoute.js","webpack://gatsby-starter-hello-world/./src/hooks/useDebounce.js","webpack://gatsby-starter-hello-world/./src/assets/login-bg.svg"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport Logo from '../images/logo.jpeg';\r\nimport LoginBg from '../assets/login-bg.svg';\r\nimport { UserState, useUserStore } from '../store/user';\r\nimport GoogleButton from './GoogleButton';\r\n\r\ninterface Props {\r\n    showPasswordReset?: boolean;\r\n    handleSubmit: (event: React.FormEvent<HTMLFormElement>) => Promise<void>;\r\n    title: string;\r\n    hidePasswordField?: boolean;\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst SignUpForm: React.FC<Props> = ({\r\n    showPasswordReset,\r\n    hidePasswordField,\r\n    title,\r\n    handleSubmit,\r\n    children,\r\n}) => {\r\n    const { createGoogleAccount } = useUserStore((state: UserState) => {\r\n        return { createGoogleAccount: state.createGoogleAccount };\r\n    });\r\n\r\n    // When there's no password field it means the user can't log in\r\n    const hideGoogleSignUp = hidePasswordField;\r\n\r\n    return (\r\n        <div className=\"flex\">\r\n            <div className=\"hidden w-1/2 lg:block\">\r\n                <img src={LoginBg} alt=\"login-bg\" className=\"object-cover h-screen\" />\r\n            </div>\r\n            <div className=\"w-full p-6 pb-0 md:p-10 lg:w-1/2\">\r\n                <div>\r\n                    <img src={Logo} alt=\"logo\" className=\"object-contain h-24\" />\r\n                </div>\r\n                <form\r\n                    className=\"flex flex-col w-full h-full max-w-md gap-4 mt-8\"\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <h1 className=\"mb-2 text-3xl font-bold\">{title}</h1>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input\r\n                            className=\"w-full base-field\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Email\"\r\n                            required\r\n                        />\r\n                    </div>\r\n                    {!hidePasswordField && (\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Password</label>\r\n                            <input\r\n                                className=\"base-field\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                id=\"password\"\r\n                                placeholder=\"Password\"\r\n                                required\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <button className=\"base-button md:w-max !px-16 mb-4\" type=\"submit\">\r\n                        Submit\r\n                    </button>\r\n                    {!hideGoogleSignUp && (\r\n                        <GoogleButton title={title} onClick={createGoogleAccount} />\r\n                    )}\r\n                    <div>{children}</div>\r\n                    {showPasswordReset && (\r\n                        <div>\r\n                            Forgot password? <Link to=\"/reset-password\">Reset password</Link>\r\n                        </div>\r\n                    )}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignUpForm;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { UserState, useUserStore } from '../store/user';\r\nimport SignUpForm from '../components/SignUpForm';\r\nimport { useBanner } from '../context/BannerContext';\r\nimport { useProtectedRoute } from '../hooks/useProtectedRoute';\r\nimport { APP_ROUTES } from '../constants';\r\nimport { ThemeNavbarLayout } from '../components/theme/ThemeNavbarLayout';\r\n\r\nconst LogIn = () => {\r\n    const { showBanner, hideBanner } = useBanner();\r\n    const { logInWithEmailAndPassword } = useUserStore((state: UserState) => {\r\n        return { logInWithEmailAndPassword: state.logInWithEmailAndPassword };\r\n    });\r\n    const { loaded } = useProtectedRoute({ userLogged: false, redirectTo: APP_ROUTES.DASHBOARD });\r\n\r\n    async function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\r\n        event.preventDefault();\r\n        hideBanner();\r\n\r\n        const elementsArray = [...(event.target as any).elements];\r\n        const formData = elementsArray.reduce((acc, elem) => {\r\n            acc[elem.id] = elem.value;\r\n            return acc;\r\n        }, {});\r\n\r\n        const { email, password }: { email: string; password: string } = formData;\r\n        try {\r\n            await logInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            showBanner({\r\n                text: error.message,\r\n                type: 'error',\r\n            });\r\n        }\r\n    }\r\n\r\n    if (!loaded) return null;\r\n\r\n    return (\r\n        <ThemeNavbarLayout>\r\n            <SignUpForm title=\"Log In\" handleSubmit={handleSubmit} showPasswordReset>\r\n                <div>\r\n                    Don't have an account? <Link to={APP_ROUTES.SIGNUP}>Sign Up</Link>\r\n                </div>\r\n            </SignUpForm>\r\n        </ThemeNavbarLayout>\r\n    );\r\n};\r\n\r\nexport default LogIn;\r\n","import React from 'react';\r\nimport Sticky from 'react-stickynode';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { DrawerProvider } from '../../context/drawerContext';\r\nimport Navbar from '../../components/theme/Navbar/index';\r\nimport { GlobalStyle, ContentWrapper } from '../../components/SaasModern/saasModern.style';\r\nimport { saasModernTheme } from '../../theme/saasModern';\r\n\r\nexport const ThemeNavbarLayout = ({ children }) => {\r\n    return (\r\n        <>\r\n            <GlobalStyle />\r\n            <ThemeProvider theme={saasModernTheme}>\r\n                <ContentWrapper>\r\n                    <div>\r\n                        <Sticky top={0} innerZ={9999} activeClass=\"sticky-nav-active\">\r\n                            <DrawerProvider>\r\n                                <Navbar />\r\n                            </DrawerProvider>\r\n                        </Sticky>\r\n                    </div>\r\n                    <div className=\"mt-24\">{children}</div>\r\n                </ContentWrapper>\r\n            </ThemeProvider>\r\n        </>\r\n    );\r\n};\r\n","import { useUserStore } from '../store/user';\r\nimport { useDebounce } from './useDebounce';\r\nimport { useEffect, useState } from 'react';\r\nimport { navigate } from 'gatsby';\r\n\r\nexport function useProtectedRoute(options = {}) {\r\n    const { userLogged = true, redirectTo = '/log-in' } = options;\r\n\r\n    const [user, loading] = useUserStore((state) => [state.user, state.loading]);\r\n    const [loaded, setLoaded] = useState(!loading);\r\n    const debouncedLoaded = useDebounce(loaded, 1);\r\n    // if userLogged is passed as an option we check to see if user is defined, else we check for\r\n    // user not to? be defined\r\n    const userCondition = userLogged ? !!user : !user;\r\n\r\n    useEffect(() => {\r\n        if (!loading && !userCondition) {\r\n            navigate(redirectTo);\r\n        } else if (!loading && userLogged && user && !user?.emailVerified) {\r\n            navigate('/verify-message');\r\n        } else {\r\n            setLoaded(!loading);\r\n        }\r\n    }, [loading]);\r\n\r\n    return { loaded: debouncedLoaded };\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport function useDebounce(value, delay) {\r\n    // State and setters for debounced value\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n    useEffect(\r\n        () => {\r\n            // Update debounced value after delay\r\n            const handler = setTimeout(() => {\r\n                setDebouncedValue(value);\r\n            }, delay);\r\n            // Cancel the timeout if value changes (also on delay change or unmount)\r\n            // This is how we prevent debounced value from updating if value is changed ...\r\n            // .. within the delay period. Timeout gets cleared and restarted.\r\n            return () => {\r\n                clearTimeout(handler);\r\n            };\r\n        },\r\n        [value, delay] // Only re-call effect if value or delay changes\r\n    );\r\n    return debouncedValue;\r\n}\r\n","export default __webpack_public_path__ + \"static/login-bg-12cb0a50a99eb339e336969c3b0fa143.svg\";"],"names":["_ref","showPasswordReset","hidePasswordField","title","handleSubmit","children","createGoogleAccount","useUserStore","state","hideGoogleSignUp","React","className","src","LoginBg","alt","Logo","onSubmit","htmlFor","type","name","id","placeholder","required","GoogleButton","onClick","Link","to","LogIn","showBanner","hideBanner","useBanner","logInWithEmailAndPassword","loaded","useProtectedRoute","userLogged","redirectTo","APP_ROUTES","ThemeNavbarLayout","SignUpForm","async","event","preventDefault","formData","_toConsumableArray","target","elements","reduce","acc","elem","value","email","password","error","text","message","GlobalStyle","ThemeProvider","theme","saasModernTheme","ContentWrapper","Sticky","top","innerZ","activeClass","DrawerProvider","Navbar","options","user","loading","setLoaded","useState","debouncedLoaded","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","userCondition","emailVerified","navigate"],"sourceRoot":""}